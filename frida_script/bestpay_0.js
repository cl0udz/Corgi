
var resolver = new ApiResolver('objc');

function onEnterFunc(args, argNum, infoArray){
    // infoArray = [ argNum, args[1], args[2], ... , args[argNum + 1], args[0], retval, funcname ]
    infoArray[0] = argNum;

    /*try {
        tmp = new ObjC.Object(args[0]);
        infoArray[argNum + 2] = tmp.toString();
    } catch(error){
        try { 
            infoArray[argNum + 2] = strFilter(Memory.readCString(args[0], 128).toString());
        } catch(err) {
            infoArray[argNum + 2] = args[0].toString();
        }
    }*/

    for(var i=1; i<argNum+2; ++i) {
        infoArray[i] = 'arg';
        /*try {
            tmp = new ObjC.Object(args[i]);
            infoArray[i] = tmp.toString();
        } catch(error){
            try { 
                infoArray[i] = strFilter(Memory.readCString(args[i], 128).toString());
            } catch(err) {
                infoArray[i] = args[i].toString();
            }
        }*/
    }

    return;
}

function onLeaveFunc(retval, argNum, infoArray){

    infoArray[argNum + 3] = 'retval';
    /*try {
        tmp = new ObjC.Object(retval);
        infoArray[argNum + 3] = tmp.toString();
    } catch(error){
        try { 
            infoArray[argNum + 3] = strFilter(Memory.readCString(retval, 128).toString());
        } catch(err) {
            infoArray[argNum + 3] = retval.toString();
        }
    }*/

    return;
}

function strFilter(str) {
    for(var i=0; i<str.length; ++i){
        if(str.charCodeAt(i) >= 32 && str.charCodeAt(i) <= 127)
            { }
        else
            return str.substring(0, i);
    }
    return str;
}

function hookObjC(FuncName, ArgNum){
    resolver.enumerateMatches(FuncName, {
        onMatch: function (match) {
                    // infoArray = [ argNum, args[1], args[2], ... , args[argNum + 1], args[0], retval, funcname ]
                    var infoArray = new Array(ArgNum + 4);
                    infoArray[ArgNum + 4] = match.name;
                    //send(match.name);

                    Interceptor.attach(match.address, {
                    onEnter: function(args){
                        //send(match.name);
                        onEnterFunc(args, ArgNum, infoArray);
                    },
                    onLeave: function(retval){
                        onLeaveFunc(retval, ArgNum, infoArray);
                        send(infoArray);
                    }
                    })
                },
        onComplete: function () {
                }
    }); 
}


var resolver = new ApiResolver('objc');

function onEnterFunc(args, argNum, infoArray){
    // infoArray = [ argNum, args[1], args[2], ... , args[argNum + 1], args[0], retval, funcname ]
    infoArray[0] = argNum;

    /*try {
        tmp = new ObjC.Object(args[0]);
        infoArray[argNum + 2] = tmp.toString();
    } catch(error){
        try { 
            infoArray[argNum + 2] = strFilter(Memory.readCString(args[0], 128).toString());
        } catch(err) {
            infoArray[argNum + 2] = args[0].toString();
        }
    }*/

    for(var i=1; i<argNum+2; ++i) {
        infoArray[i] = 'arg';
        /*try {
            tmp = new ObjC.Object(args[i]);
            infoArray[i] = tmp.toString();
        } catch(error){
            try { 
                infoArray[i] = strFilter(Memory.readCString(args[i], 128).toString());
            } catch(err) {
                infoArray[i] = args[i].toString();
            }
        }*/
    }

    return;
}

function onLeaveFunc(retval, argNum, infoArray){

    infoArray[argNum + 3] = 'retval';
    /*try {
        tmp = new ObjC.Object(retval);
        infoArray[argNum + 3] = tmp.toString();
    } catch(error){
        try { 
            infoArray[argNum + 3] = strFilter(Memory.readCString(retval, 128).toString());
        } catch(err) {
            infoArray[argNum + 3] = retval.toString();
        }
    }*/

    return;
}

function strFilter(str) {
    for(var i=0; i<str.length; ++i){
        if(str.charCodeAt(i) >= 32 && str.charCodeAt(i) <= 127)
            { }
        else
            return str.substring(0, i);
    }
    return str;
}

function hookObjC(FuncName, ArgNum){
    resolver.enumerateMatches(FuncName, {
        onMatch: function (match) {
                    // infoArray = [ argNum, args[1], args[2], ... , args[argNum + 1], args[0], retval, funcname ]
                    var infoArray = new Array(ArgNum + 4);
                    infoArray[ArgNum + 4] = match.name;
                    //send(match.name);

                    Interceptor.attach(match.address, {
                    onEnter: function(args){
                        //send(match.name);
                        onEnterFunc(args, ArgNum, infoArray);
                    },
                    onLeave: function(retval){
                        onLeaveFunc(retval, ArgNum, infoArray);
                        send(infoArray);
                    }
                    })
                },
        onComplete: function () {
                }
    }); 
}

setTimeout(function(){hookObjC("+[BPCheckoutBestCarPay sharedBestCardPay]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay queryBalanceMoney:cardpass:withPay:orderInfo:]", 4)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay handleCouldJump]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay secondBestCardPageBackClicked]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay bestCardPayResultWith:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay doBestCardPayRequest]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay bestPayCardToPayWithParams:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay bestCardPayview]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay payWayDict]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay accPay]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay orderInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay blanceAmt]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay cardDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay payResultDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutBestCarPay afterBalance]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPAllAppsHeaderElement groupModel]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedBankCardInfo bankName]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedBankCardInfo cardName]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedBankCardInfo cardType]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedBankCardInfo cardNum]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedBankCardInfo validDate]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedBankCardInfo cardFullImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedBankCardInfo cardNumImage]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter POSTName:params:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter POSTName:params:serviceName:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter securityPOSTName:params:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter confusionPOSTName:params:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter signPOSTName:params:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCreateCustomerInfoWithProductNo:loginPwd:enlCode:payPwd:enyCode:idType:idNo:securityQuestion:securityAnswer:reference:]", 10)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryInfoAndBalanceWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCustomerInfoWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqIsAccountExistsWithProductNo:accountType:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqUploadAvatarWithProductNo:sessionKey:fileName:photo:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqIsDefaultOpenedCustomerWithProductNo:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqSetMailAndNicknameWithProductNo:sessionKey:type:email:nickName:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCheckLoginNameWithProductNo:sessionKey:loginName:loginType:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqUserInfoWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqRealNameWithoutApprovalWithProductNo:sessionKey:certNo:name:certType:txnChannel:]", 6)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqEmailAuthWithProductNo:email:businessType:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqVerifyEmailAuthWithProductNo:verifyCode:businessType:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqFindPayPassWordByIDCardWithProductNo:sessionKey:certNo:name:businessType:subBusinessType:token:]", 7)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCheckCodeAuthWithProductNo:sessionKey:verifyCode:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCheckEncryptedWithProductNo:sessionKey:securityQuestion:securityAnswer:certNo:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqSmsNotDisturbStatusWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqSetSMSNotDisturbWithProductNo:sessionKey:switchFlag:limitAmount:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqRaiseStarWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCheckCloseOperatorWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCloseOperatorByConditionWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCardBINWithProductNo:sessionKey:bankCardNo:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqBankSmsCodeWithProductNo:sessionKey:cardCode:cardName:bankCardNo:cvv2:cardValidity:phone:bindType:]", 9)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqBindCardByCifWithProductNo:sessionKey:idCardNo:cardInfoEnc:bankCardOwner:bankCardNo:cvv2:cardValidity:phone:validCode:bindFlag:bindType:payPassword:payPasswordEnCode:reqNo:businessType:subBusinessType:]", 17)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqUnBindCardWithProductNo:sessionKey:bankCardNo:bindCardType:payPassword:payPasswordEnCode:]", 6)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqAviliableBanksWithProductNo:sessionKey:bankFlag:cardType:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqBoundCardWithProductNo:sessionKey:queryType:cardStatus:enCode:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqBoundCardListWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryBindCardIsSupportedWithProductNo:sessionKey:encodeCardNo:cardType:bankFlag:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryShortCardBinWithProductNo:sessionKey:bankCardNo:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCheckPasResultWithProductNo:sessionKey:channel:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqBarCodeWithProductNo:sessionKey:barCodeInfo:city:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqScanBarCodeAutoLoginWithProductNo:sessionKey:qrCode:loginToken:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqOfflineBarCodeWithAcc:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqBarCodeWithAcc:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqPaymentCodeTypeWithAcc:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqPaymentCodeStatusWithAcc:sessionKey:orderNo:orderReqNo:merchantId:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqUpdatePayOrderWithAcc:sessionKey:cardSequence:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqPaymentOrderWithAcc:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqPayOrderHistoryWithAcc:sessionKey:startDate:endDate:currentPage:pageNum:]", 6)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqSetBarcodeExpireWithProductNo:sessionKey:barcodeList:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQuerySignRandomNumWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqSmsCodeWithProductNo:businessType:smsType:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqVerifySmsCodeWithProductNo:businessType:subBusinessType:verifyCode:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCheckPayPwdWithProductNo:sessionKey:payPwd:enyCode:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQuerySwitchWithProductNo:switchType:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCertificateWithProductNo:sessionKey:certNo:name:gender:birthday:address:certExpiryDate:uploadFile:uploadFileBack:autoMatch:]", 11)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryReferrerWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqUpdateQuesReferrerWithProductNo:sessionKey:question:answer:referrer:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqFindCustomerGradeWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqMarketingActivitiesWithProductNo:sessionKey:requestChannel:serviceCode:pickupCode:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqPasswordWithProductNo:loginPwd:enCode:verifyCode:imgVerifyKey:locInfo:slideLoginFlag:]", 7)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqVerifyCodeWithProductNo:verifyCode:locInfo:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqTokenAuthWithProductNo:loginToken:locInfo:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQuitLoginWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqUnionLoginWithAccessToken:externalType:clientId:productNo:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqUnionLoginFurtherAuthWithAccessToken:productNo:payPwd:enyCode:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqFace2faceQrCodeWithProductNo:sessionKey:amount:comment:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqTransHistoryWithAccountNo:sessionKey:reqStartDate:reqEndDate:currentPage:pageNum:]", 6)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqDesensitizedTransDetailWithAccountNo:sessionKey:OrderNo:orderReqNo:orderDate:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqAllLimitWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqOrderWithAccountNo:sessionKey:cardNo:cardName:payerAccount:payerName:orderAmt:comment:]", 8)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqFortuneInfoWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryFortuneInfoWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqTyCreditWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCreditAccountLimitWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqLoanLimitWithProductNo:sessionKey:productType:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqInsuranceAmountWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqRepayAccountInfoWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryWealthProductsWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqAccountInsuranceWithProductNo:sessionKey:productCode:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqNewAccountInsuranceWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqHallInfoWithProductNo:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqUpdateGroupListWithProductNo:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqRcListWithProductNo:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqAppGroupListWithProductNo:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqAppTabBarSkinWithProdcutNo:location:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqPfInfoWithProductNo:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqMSGListWithProductNo:sessionKey:msgType:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqMSGDetailWithProductNo:sessionKey:msgId:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryFindlistWithWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCUSInfoWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqAdNewListWithProductNo:sessionKey:adType:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqAppSecurity]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqRedPacketWithProductNo:withSessionkey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCreateMerchantScanBarcodeOrderWithProductNo:sessionKey:city:PartnerCode:partnerName:address:orderCode:inputMoney:cashierChannelNo:terminalNumber:]", 10)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqTransNoticeDetailWithProductNo:sessionKey:sendNo:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqUniversalOrderWithProductNo:sessionKey:merchantId:subMerchantId:merchantName:txnType:orderNo:orderRequestNo:orderDate:orderAmt:divDetails:accountType:accountName:goodsCode:goodsName:merchantUrl:backMerchantUrl:remark:orderCcy:productAmount:attachAmount:serviceCode:]", 22)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryOrderMerRedBagLinkInfoWithProductNo:sessionKey:orderNo:merchantId:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqScrapingNoticeVoucherWithLoginNo:sessionKey:sessionID:token:linkDetailId:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter senderForQueryReferTotalWithProduct:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter senderForQueryReferDetailsWithProduct:sessionKey:currentPage:pageCount:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqInsertCounselorWithProductNo:sessionKey:counselorPhone:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqFurtherSmsAuthWithProductNo:verifyCode:tempToken:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqModifyLoginPasswordWithProductNo:sessionKey:oldLoginPwd:enLCode:newLoginPwd:enMCode:]", 6)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqResetLoginPasswordWithProductNo:loginPwd:enCode:tempToken:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqResetLoginPasswordAfterWithProductNo:sessionKey:loginPwd:enCode:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqVerifyIdCardForResetLoginPwdWithProductNo:certNo:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqVerifySecurityQuestionForResetLoginPwdWithProductNo:securityQuestion:securityAnswer:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqSetPayPasswordWithProductNo:sessionKey:payPwd:enyCode:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqSetBackPayPasswordWithProductNo:sessionKey:payPwd:enyCode:businessType:subBusinessType:]", 6)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQuickResetBankVerifyWithProductNo:sessionKey:bankCardNo:businessType:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCheckQuickAuthWithProductNo:sessionKey:bankCardNo:cardName:cardCode:cvv2:cardValidity:phone:validCode:reqNo:imgVerifyCode:verifyTimestamp:businessType:subBusinessType:]", 14)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqGetUserSecurityListWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqSecurityQuestionsWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqModifyPayPasswordWithProductNo:sessionKey:oldPayPwd:newPayPwd:enLCode:enMCode:]", 6)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqOfflineAndRoamingPayStateWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqSetRoamingPayStateWithProductNo:sessionKey:switchFlag:password:cipherKeyId:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqSetOfflinePayStateWithProductNo:sessionKey:switchFlag:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqResetQuestionWithProductNo:sessionKey:question:answer:txnPassword:enyCode:businessType:verifyCode:]", 8)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqUserGuideWithProductNo:sessionKey:problemType:currPage:pageCount:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryPayLimitWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryNoPwdPayWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqUpdateNoPwdPayWithProductNo:sessionKey:payPwd:enCode:switchFlag:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqTransferRecordWithProductNo:sessionKey:transferFlag:orderNo:pageNum:currentPage:]", 6)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqTransferPhotoWithProductNo:sessionKey:transferPhone:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqTransferOrderWithProductNo:sessionKey:transferType:orderAmt:goodsName:goodsCount:cardNo:cardName:remark:]", 9)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCheckCustomerNameByProductNo:sessionKey:customerNo:customerName:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqBillDetailWithProductNo:sessionKey:tradeNo:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqRiskFindCustomerCheckItemWithAcc:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqRiskAutoFreezeStatusConfirmWithAcc:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqRiskAutoFreezeWithAcc:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqGetMerchantInfoDetailWithProductNo:sessionKey:merchantCode:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqGetActivityDetailWithProductNo:sessionKey:activityId:operatorType:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryUserStatusWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqUnlockStyleWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCumProListWithProductNo:sessionKey:problemType:currPage:pageCount:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqWithdrawQuotaWithProductNo:sessionKey:busiCode:bankId:bankCardNo:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqWithdrawWithProductNo:sessionKey:bankAccID:bankAccPwd:orderAmt:attachMsg:province:bankCardNO:bankName:payeeProductNO:remark:payToken:transferType:enCode:]", 14)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqWithdrawRecordWithProductNo:sessionKey:transferType:pageNum:currentPage:fromDate:toDate:]", 7)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqManageMoneyAllStateWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqNewQueryTybStatusWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryMerRedbagsWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter receiveMerRedbagsWithProductNo:sessionKey:bagsActivityId:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqChangeProductNoWithProductNo:sessionKey:NewProductNo:verifyCode:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCheckProductNoIsBindWithProductNo:sessionKey:NewProductNo:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCheckSecurityBindUserWithProductNo:sessionKey:token:certNo:name:securityQuestion:securityAnswer:]", 7)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter rebackPWDChannelWithProductNo:sessionKey:bizType:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCollectOrAuthFaceImgWithOperatorNo:authPayChannel:loginName:encryptPart:notEncryptPart:enCodeIndex:signedInfo:]", 7)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqFaceThanWithOperatorNo:authPayChannel:loginName:encryptPart:notEncryptPart:enCodeIndex:]", 6)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqIDCardCerGetApplyIdWithProductNo:sessionKey:applyId:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqIDCardCerWithOperatorNo:authPayChannel:loginName:encryptPart:notEncryptPart:enCodeIndex:applyId:]", 7)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqTrainTicketADListWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqMyPrivilegeDetailWithProductNo:activityID:activityType:sessionKey:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqMyPrivilegeGetVoucherWithProductNo:activityID:sessionKey:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCityCodesWithVersion:productNo:sessionKey:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqMerchantArroundWithProductNo:sessionKey:activityID:cityCode:longitude:latitude:]", 6)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqPrivilegeBannerWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqPrivilegeStoreBannerWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqIsRebBagUserWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqQueryUserQuestionsWithProductNo:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqAnswerUserQuestionWithProductNo:questionIDs:answers:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqScanRiskWithProductNo:sessionKey:type:token:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqVoicceRecognizeWithProductNo:sessionKey:voiceData:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqPaymentApplyWithProductNo:operatorNo:sessionKey:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqPaymentSearchRecordWithProductNo:operatorNo:sessionKey:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqCmtPaymentWithProductNo:operatorNo:sessionKey:eventDTO:attachments:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter ret6bitString]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqMessageStreamOutWithProductNo:sessionKey:version:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter deleteOneMessageWithProductNo:sessionKey:messageId:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter uploadInfoForSystemWithOrder:withSessionkey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderCenter reqBankLogoWithProductNo:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeStoreBannerInfo privilegeStoreBannerInfoWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeStoreBannerInfo privilegeStoreBannerInfoListWithDicts:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreBannerInfo iconURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreBannerInfo routerURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreBannerInfo bannerID]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreBannerInfo bannerTitle]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController5 textFiled]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController5 freshPhoneNumber]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController5 oldPhoneNumber]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDCodabarBarcode _encodeChar:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPBuyCouponList buyCouponListWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPBuyCouponList updateBuyCouponListWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPBuyCouponList couponInfoAtIndex:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPBuyCouponList rowCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPBuyCouponList dataList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPBuyCouponList allShow]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPStandardAdapter adapterRate]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPStandardAdapter adapterValue:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPStandardAdapter adapterValueReal:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPRequestCache sharedCache]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestCache fileNameWithURL:params:sessionKey:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPRequestCache DESEncrypt:WithKey:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPRequestCache DESDecrypt:WithKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestCache readCacheResponseWithSender:expiredInterval:sessionKey:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestCache readCacheResponseWithSender:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPRequestCache readResponseWithURL:params:expiredInterval:sessionKey:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestCache writeCacheResponse:sender:sessionKey:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPRequestCache writeCacheResponse:url:params:sessionKey:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPRequestCache removeCacheWithSender:sessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPRequestCache removeCacheWithURL:params:sessionKey:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPRequestCache removeAllCache]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestCache removeAllCache]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestCache yyCache]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture allPayWay]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture selectedPaywayDict]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture selectSourceType]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture voucherArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture bindCardArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture provinceId]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture quickPayDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture defaultPayWayArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture unusedPayWayArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture otherPayWayArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture indexPathForSelectedRow]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture lineForFirstRowOfFirstSection]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFpaywayChooseViewForGesture lineForFirstRowOfSecondSection]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPTransferManager sharedManager]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPTransferManager jumpToTransferMainVCWithCurrentController:completionBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPTransferManager jumpToBankTransferWithCurrentController:bankCardNo:completionBlock:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPTransferManager completionBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDPostnetBarcode printsCaption]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDPostnetBarcode _encodeChar:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDPostnetBarcode _heightForDigit:andBar:]", 2)}, 0);
setTimeout(function(){hookObjC("-[NKDPostnetBarcode generateChecksum]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool conversionJsParams:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool checkJsRequest:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool replacingString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool jumpToBindCard:controller:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool promotionType:controller:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool jumpToActivityVC:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool jumpToForgotPayPwdVC:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool callNum:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool fomatePhoneNum:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool phoneNumberFormater:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool base64Decode:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool base64Encode:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool deleteFile:appItemModel:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool createDataBase:appItemModel:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool fielExists:appItemModel:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool operationSQL:appItemModel:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool insertData:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool pinkeyEncrypt:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool putParams:appItemModel:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool createQRCodeWithName:url:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool createActionSheet:delegate:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool ret16bitString]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool doEncryptAction:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool dealOnLineUrl:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool checkWhitelist:whitelist:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPH5JSTool checkAuthority:authority:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPSkinManager sharedManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSkinManager requestResource]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSkinManager notificationLoginSuccess]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSkinManager notificationLogoutSuccess]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSkinManager applicationDidBecomeActiveNotification:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSkinManager tabBarConfigList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSkinManager appIconConfigList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSkinManager tabBarPlaceholderConfigList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSkinManager recFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSkinManager tabFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSkinManager currentRecVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSkinManager currentTabVersion]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPCacheManager clearCacheWithCompletion:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPCacheManager clearFindCache]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt md5:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt md5String:type:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt base64Encode:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt base64Encode:sourceEncodingType:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt dataBase64Decode:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt base64Decode:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt base64Decode:sourceDecodingType:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt base64DecodeWebStr:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt tripleDESEncrypt:withKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt tripleDESDecrypt:withKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt tripleDESDecryptWebStr:withKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt tripleDES:encryptOrDecrypt:withKey:encoding:]", 4)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt stringFromHexString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt h5TripleDesEncrypt:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCommonEncrypt h5TripleDesDecrypt:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeVoucherInfo privilegeVouchersWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeVoucherInfo privilegeVouchersWithDict:andActivityName:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeVoucherInfo privilegeVoucherInfoWithDict:andActivityName:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeVoucherInfo activityName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeVoucherInfo startDate]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeVoucherInfo endDate]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeVoucherInfo attributedFaceValue]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeVoucherInfo businessType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeVoucherInfo useDesc]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSender senderWithApiName:dictParams:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSender senderWithApiName:dictParams:encryptType:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender sendRequestWithResult:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender senderRequest]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender handleMAPIResult:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender cancelRequest]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender updateCacheParams:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender readCacheWithCacheExpiredInterval:cacheSessionKey:success:failure:]", 4)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender readCacheWithCacheSessionKey:success:failure:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender cacheResponse:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender removeCacheWithCacheSessionKey:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender parentResultBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender factorRequestSender:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender apiName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender dicBaseParams]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender dicFullParams]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender autoUpdateSession]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender returnWhenLogout]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender resultBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender cacheConfiguration]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender cacheParams]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender shouldCacheWhenAsMainRequest]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender encryptType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSender nextSender]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPTakePictureTool imagePickerController:didFinishPickingMediaWithInfo:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPTakePictureTool imagePickerControllerDidCancel:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPTakePictureTool headImgAdjust:didFinished:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPTakePictureTool doesCameraSupportTakingPhotos]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPTakePictureTool canUserPickPhotosFromPhotoLibrary]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPTakePictureTool requestForPhotoAuthorization]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPTakePictureTool requestForCameraAuthorization]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPTakePictureTool cameraSupportsMedia:sourceType:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPTakePictureTool takePhoto]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPTakePictureTool choosePhoto]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPWatchUtility allocWithZone:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPWatchUtility sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWatchUtility startWCSession]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWatchUtility session:didReceiveMessage:replyHandler:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPWatchUtility formateMsg:type:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPWatchUtility wcSession]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController4 textFiled]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFReqResponse newResponse]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReqResponse logResponse]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReqResponse reqStatus]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReqResponse reqNetError]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReqResponse reqCode]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReqResponse reqMsg]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReqResponse reqData]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReqResponse reqDataStr]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReqResponse reqResult]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReqResponse cipherKeyId]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReqResponse cipherKey]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFBackPayPwdTool createBackPayPwdTextFieldWithFrame:placeholder:delegate:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFBackPayPwdTool clearSpecialCharacter:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutDataSaver pathWithName:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutDataSaver dataWithObject:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutDataSaver ObjectWithData:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutDataSaver saveObject:withName:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutDataSaver removeDataWithStringName:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPFindNearbyAnimationPositionLayer layerCenter]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFindNearbyAnimationPositionLayer maskLayer]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFindNearbyAnimationPositionLayer maskLayerRadius]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFindNearbyAnimationPositionLayer displayLink]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager changeScanType:effectRect:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager changeScanType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager resetVideoOutputConnectionOrientationWithScanType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager startCapture]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager stopCapture]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager restartCapture]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager openTorch]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager closeTorch]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager captureOutput:didOutputSampleBuffer:fromConnection:]", 3)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager effectRect]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager analyzeImageBuffer:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager analyzeCodeImageBuffer:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager analyzeQRCodeFromImageBuffer:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager calcRect:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager identifyQRCodeOrBarCodeWithImage:withScanType:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager scanQRCodeOrBarCodeWithImage:withScanType:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager scanDirection]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager scanType]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager backCameral]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager videoOutPut]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager previewLayer]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager cropRect]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFMultiFunctionScanManager nowSelectScanType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVerifyDirector sessionKeyDidChange:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPVerifyDirector bindDataWithProductNo:sessionKey:userName:idCard:checkFlag:starLevelStatus:verifyBusinessType:]", 7)}, 0);
setTimeout(function(){hookObjC("+[BPVerifyDirector bindDataWithUserModel:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPVerifyDirector bindDataWithUserModel:verifyBusinessType:delegate:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPVerifyDirector bindDataWithUserModel:verifyBusinessType:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPVerifyDirector verifyAnswerAndQuestionWithTarget:verifyBusinessType:result:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPVerifyDirector verifySmsCodeWithTarget:verifyBusinessType:result:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPVerifyDirector verifyOldCardWithTarget:verifyBusinessType:result:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPVerifyDirector verifyBindNewCardWithTarget:verifyBusinessType:result:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPVerifyDirector productNo]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVerifyDirector sessionKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVerifyDirector userName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVerifyDirector idCard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVerifyDirector checkFlag]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVerifyDirector starLevelStatus]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVerifyDirector verifyType]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeProvinceInfo privilegeProvinceInfoWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeProvinceInfo privilegeProvinceListWithDicts:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeProvinceInfo provinceCode]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeProvinceInfo provinceName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeProvinceInfo cityList]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPFind findWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPFind findArrayWithDictArray:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPFind pageContent]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFind localSign]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFind pageImg]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFind pageType]", 0)}, 0);
setTimeout(function(){hookObjC("+[ReachabilityTool checkNetworkState]", 0)}, 0);
setTimeout(function(){hookObjC("+[ReachabilityTool checkNetworkStateBlock:]", 1)}, 0);
setTimeout(function(){hookObjC("+[KSHContextManager sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[KSHContextManager eaglContext]", 0)}, 0);
setTimeout(function(){hookObjC("-[KSHContextManager ciContext]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPayProgressAnimation createUI]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPayProgressAnimation requestForSuccess]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPayProgressAnimation requestForErrorOrStop]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPayProgressAnimation payHook]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPAdapterKit adapterValue:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDEAN13Barcode _parityForSystemDigit:forIndex:]", 2)}, 0);
setTimeout(function(){hookObjC("-[NKDEAN13Barcode generateChecksum]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPNewsCenterManager refreshNewsCenterBadgeWithBlock:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPLobbyInfoListManager sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyInfoListManager loginSuccessed]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyInfoListManager logoutSuccessed]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyInfoListManager updateInfoContent]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyInfoListManager deleteMessage:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyInfoListManager handleMessage:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyInfoListManager infoList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyInfoListManager infoContent]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedIDCardInfo cardSide]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedIDCardInfo cardIDNum]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedIDCardInfo frontSideImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedIDCardInfo faceImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedIDCardInfo validDate]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFScanedIDCardInfo backSideImage]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFMapiManager sharedManager]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPTestManager sharedManagerWithURL:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFTransferCertificate startGoToInitialization:withOrderInfo:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFTransferCertificate ApplyInitialization:withOrderInfo:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFTransferCertificate goToApplyInitialization:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFTransferCertificate goToSignInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFTransferCertificate checkOutErrorCode:withCodeArray:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFTransferCertificate savePayWay:withAccount:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFTransferCertificate handleRemoveTransferCer:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFTransferCertificate judgeIsUseCert]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDInterleavedTwoOfFiveBarcode _getBarForDigit:forBarNumber:]", 2)}, 0);
setTimeout(function(){hookObjC("-[NKDInterleavedTwoOfFiveBarcode generateChecksum]", 0)}, 0);
setTimeout(function(){hookObjC("+[BestpayRSA stripPublicKeyHeader:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BestpayRSA addPublicKey:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BestpayRSA encryptString:publicKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BestpayRSA encryptData:publicKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BestpayRSA decryptString:publicKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BestpayRSA decryptData:publicKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFModularCheckout allocWithZone:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFModularCheckout sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout modularCheckoutEnter]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout jumpToMobileBank]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout checkLimitLines]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout gotoPayWithTouchIDOrPwd]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout accessFundsSource:isExitAfterNetError:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout handleMoneySource]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout handlePayDescripe:withStr:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout payWayDic:type:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout balanceInfoWithDic:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout forgetPassWordAndGoToResetPassWord]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout gotoPayWithTouchIDType:withPayToken:withSmsCode:]", 3)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout jumpToResetPassword]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout requestPwd:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout passwordAuthenticationWithPwdStr:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout payWithDifferentType:withPwd:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout jumpToSmsWithDic:withPayDic:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout commitMessageContent:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout payWithBankType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout jumpToAddBindCard]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout searchUserRealName]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout failureCallbackWithErrorDic:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout enterType]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout temporaryParams]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout orderInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout temporaryOrderInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout allMoneySourceDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout finalPaymentWay]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout bindCardSuccess]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout lastFourNum]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout payResultDicFromSMSPage]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout defaulListtArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout bindCardListArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout errorInfoDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout payType]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout touchIDPay]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout touchIDPayDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout useTouchIDPay]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout defaultPayWayArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout choosePayWayArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout quickPayDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout balancePayDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout quickCardArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout wapPayArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout recordPayWay]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout bindPhoneValid]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout phoneFlag]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFModularCheckout noSupportTouchIDPay]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDExtendedCode39Barcode _encodeChar:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFRechargeDoOrder handleRechargeOrderParameter]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFRechargeDoOrder rechargeDoNewOrder:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFRechargeDoOrder validRechargeWay:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFRechargeDoOrder defaultPayWay:withDefaultArray:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFEnvironmentManager shareManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFEnvironmentManager baseEnvironmentConfig]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFEnvironmentManager environmentType]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFEnvironmentManager mapiBaseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFEnvironmentManager clientBaseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFEnvironmentManager scratchLe_URL]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFEnvironmentManager NewCheckoutCounterBaseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFEnvironmentManager CheckoutCounterBaseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFEnvironmentManager CheckoutCounterCertUrl]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFEnvironmentManager trainBaseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFEnvironmentManager train_GD_KEY]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFEnvironmentManager train_RESULT_CODE]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFEnvironmentManager train_RESULT_DESC]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFGoToRecharge paramsFromKeyValueStr:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToRecharge queryMerchantInfoAfterGetKeyWithorder:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToRecharge queryMoneySource:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToRecharge jumpToCheckoutCounter:order:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToRecharge enterType]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToRecharge paramsDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToRecharge tempOrderModelFromAccRecharge]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToRecharge orderInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay directlyPay:withEnterType:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay queryMerchantInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay handleBaiDu:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay queryMerchantInfoAfterGetKeyWithorder:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay accessFundsSource:isExitAfterNetError:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay requestAgain:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay requestAccountStarLevel:withExit:withPayInfo:]", 3)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay leaveCheckoutCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay goToPayRealName]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay jumpToBandingCar]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay BindingCardIsSuccessfull:withBankCard:diffServDict:]", 3)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay handleErrorJump:with:withOrderInfo:withIndex:withPayInfo:]", 5)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay jumpToCheckoutCounter:order:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay clearBuryPointEventData]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay handleEnterTrype]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay handleRealName]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay trackElementBuriedPoint]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay canBuriedPoint]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay orderModel]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay payEnterType]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay favourableArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay voucherArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay unUseFavourableArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay bankFavourableArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay handleBalanceLimit]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay allPaySource]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay orderInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFGoToPay finishRealName]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFRequestListManager sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFRequestListManager request:params:result:]", 3)}, 0);
setTimeout(function(){hookObjC("-[YZFRequestListManager DataTOjsonString:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFRequestListManager recordH5Request:params:reqID:]", 3)}, 0);
setTimeout(function(){hookObjC("-[YZFRequestListManager recordH5Callback:result:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFRequestListManager logRequest]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFRequestListManager logJS]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFRequestListManager countJS]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPUserInfoTool jumpToCompletionInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPUserInfoTool jumpToPromoteStar:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPUserInfoTool checkFlagState]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPGetCouponInfo buyCouponActivity]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPGetCouponInfo couponLinkURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPGetCouponInfo couponID]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPGetCouponInfo couponType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPGetCouponInfo couponName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPGetCouponInfo couponImageURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPGetCouponInfo couponValue]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPActivityIndicatorFooter footerWithRefreshingTarget:refreshingAction:noMoreDataString:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPActivityIndicatorFooter placeSubviews]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPActivityIndicatorFooter noMoreDataString]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDModifiedPlesseyHexBarcode _encodeChar:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPWealthSectionHeaderView1 moreAction:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPWealthSectionHeaderView1 updateTitle:moreTitle:jumpURL:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPWealthSectionHeaderView1 t_label]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWealthSectionHeaderView1 jumpURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutTouchIDPay checkoutPayTouchIDIsSupport:withBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutTouchIDPay checkoutTouchIDPay:withBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutTouchIDPay handleWithError:block:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutTouchIDPay refreshTouchID]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutTouchIDPay orderInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutTouchIDPay openState]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutTouchIDPay fromeType]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutTouchIDPay resultStatus]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutTouchIDPay fidoStr]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutTouchIDPay payType]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutTouchIDPay resultBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDModifiedPlesseyBarcode _encodeChar:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDModifiedPlesseyBarcode generateChecksum]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterManager sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutCounterManager sessionKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutCounterManager appSessionKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutCounterManager thirdSessionKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFBackPayPwdInPutTextField canPerformAction:withSender:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeTagInfo privilegeTagsWithArray:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeTagInfo privilegeTagsWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeTagInfo tagIcon]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeTagInfo tagName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeTagInfo tagIntroduction]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeTagInfo tagType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreHeader trackPropertiesAtIndexPath:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreHeader layoutSubviews]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreHeader headInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreHeader recommendCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreHeader bannerContent]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreHeader categoryContent]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreHeader adContent]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreHeader goodRecommendContent]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreHeader adViews]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFMerchantHandle paramsFromString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFMerchantHandle paramsFromKeyValueStr:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFMerchantHandle checkParams:merKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFMerchantHandle messageFromOrder:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFMerchantHandle backToMerchantWithScheme:code:message:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController1 toDefaultCanal]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController1 toSpecialCanal]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController1 changePhone]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController1 payPwdDidCancel:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController1 payPwdDidConfirm:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController1 payPwdDidFrogetPsw:isSuccess:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController1 queryIsRebbagUser]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle oneCardInfoParams]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle componentParams:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle componentParams:joinedByString:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle baseCommonParams]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle appendBaseParams:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle reconstructionCommonParams]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle appendReconstructionParams:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle checkoutCounterCommonParams]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle appendCheckoutCounterCommonParams:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle handleReqAPIResponse:object:error:block:]", 4)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle handleReqSerResponse:error:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle handleBarCodePayReqSerResponse:error:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle handleReqSerOperation:responseObj:error:block:]", 4)}, 0);
setTimeout(function(){hookObjC("+[YZFReqHandle handleReconstructionReqSerResponse:error:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFAlertIntercepterTool sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFAlertIntercepterTool clearCache]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFAlertIntercepterTool messageArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutOpenTouchIDPay clearSpecialCharacter:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutOpenTouchIDPay requestPwd:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutOpenTouchIDPay registerFingerprint]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutOpenTouchIDPay orderInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutOpenTouchIDPay cipherKeyId]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPViewAndFontColumn handleResponseArrAy:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutTimeHandle currentDateStringWithFromat:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutTimeHandle stringFromDate:format:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutTimeHandle dateFromString:format:]", 2)}, 0);
setTimeout(function(){hookObjC("-[NKDAbstractUPCEANBarcode firstBar]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDAbstractUPCEANBarcode lastBar]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDAbstractUPCEANBarcode _encodeChar:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDAbstractUPCEANBarcode barBottom:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDAbstractUPCEANBarcode generateChecksum]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeInfo privilegeInfoWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeInfo privilegeListWithDicts:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo activityType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo privilegeType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo activityId]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo activityName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo promotionType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo valueType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo promotionValue]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo attributePromotionValue]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo merchantPic]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo pageTitle]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo shareType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo iconImageName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeInfo merchantDistance]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPBuyCouponInfo buyCouponInfoWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPBuyCouponInfo couponID]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPBuyCouponInfo couponName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPBuyCouponInfo couponImageURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPBuyCouponInfo couponOriginalPrice]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPBuyCouponInfo couponCurrentPrice]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPBuyCouponInfo couponLinkURL]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeStoreAdInfo privilegeStoreAdWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeStoreAdInfo privilegeStoreAdListWithDicts:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreAdInfo activityId]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreAdInfo activityLink]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreAdInfo activityTitle]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreAdInfo activityImg]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool userFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool applicationModelFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool lobbyVersionInfoFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool lobbyAppGroupListFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool lobbyAdListFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool lobbyResourceListFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool lobbyResourceLaunchImageFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool lobbyRemovedInfoListFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool lobbyInfoContentFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool lobbyAppSecurityFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool lobbyBankLogoFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool requestCacheDirectoryPath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool findCachePath:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool findCachePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool yyCacheDirectoryPath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFilePathTool yyRequestCachePath]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSlider inPresentation]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSlider startPresentation]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSlider beginTrackingWithTouch:withEvent:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSlider continueTrackingWithTouch:withEvent:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSlider endTrackingWithTouch:withEvent:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSlider touchInKnob:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSlider rotationFromCGAffineTransform:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSlider angleFromCGAffineTransform:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSlider refreshWithAngle:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSlider refreshWithTotalCount:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSlider refreshWithHightlightedCount:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSlider needShowPresentation]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFCreateVirtualOrders orderParamsFromKeyValueStrOfOrderDesWithTemParams:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCreateVirtualOrders createVirtualodersParameterWithParamDic:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCreateVirtualOrders createCheckUrlParamDic:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFRALUITool textFieldWithPlaceholder:target:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFRALUITool slientFieldWithPlaceholder:target:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFRALUITool toastText:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFRALUITool toastRotationText:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutAddSpacePhoneNumTool textField:replacementString:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutAddSpacePhoneNumTool orderWithCreditOrder:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager startLocation]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager checkLocationService]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager configLocationManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager locateAction]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager appWillEnterForegroundNotify:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager updateChooseCityName:code:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeManager shareInstance]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeManager allocWithZone:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager locatedCityName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager locatedCityCode]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager locatedLongitude]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager locatedLatitude]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager chooseCityName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager chooseCityCode]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager chooseLongitude]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager chooseLatitude]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager locationManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager failedTimes]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeManager lastLocationServiceStatus]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDUPCABarcode generateChecksum]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDPlanetBarcode _heightForDigit:andBar:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterReqManager sharedManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutCounterReqManager POST:parameters:progress:success:failure:]", 5)}, 0);
setTimeout(function(){hookObjC("-[DatabaseManager createSimulateDataWithSQL:andPath:]", 2)}, 0);
setTimeout(function(){hookObjC("-[DatabaseManager openDatabaseWithPath:]", 1)}, 0);
setTimeout(function(){hookObjC("+[DatabaseManager sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[DatabaseManager addRecordsWithArray:andTBName:]", 2)}, 0);
setTimeout(function(){hookObjC("-[DatabaseManager addRecordsWithSql:WithDatabasePath:]", 2)}, 0);
setTimeout(function(){hookObjC("-[DatabaseManager deleteRecordWithSql:WithDatabasePath:]", 2)}, 0);
setTimeout(function(){hookObjC("-[DatabaseManager deleteRecord:]", 1)}, 0);
setTimeout(function(){hookObjC("-[DatabaseManager closeDatabase]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController3 doRequestLists]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController3 verifyAnswerAndQuestionResult:director:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController3 verifyOldCardWithResult:director:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController3 verifyBindNewCardWithResult:director:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController3 didReceiveMemoryWarning]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController3 dataList]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeStoreHeadInfo privilegeStoreHeadInfoWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreHeadInfo adInfoList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreHeadInfo bannerList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreHeadInfo categoryList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRecordTool recordUrl]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRecordTool startRecord]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRecordTool stopRecord]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRecordTool deleteRecordFile]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRecordTool beginDate]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFPromoteStar shareInstance]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFPromoteStar pushYZFAuthMainController]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFPromoteStar pushYZFBindGuideController:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar loginSuccess]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar doCompletionInfoCheckRequest]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFPromoteStar jumpPromoteStarWithBackVc:block:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar gotoPromoteStar]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFPromoteStar jumpToCompletionInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar ignoreBindingCard]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar bindCardResult:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar gotoCompletioninfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar completionInfoCerPictureUploadSuccess]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar completionInfoIgnoreBindingCardSuccess]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar completionInfoBindCardResultSuccess]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar completionInfoUploadCerInfoSuccess]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar completionInfoEnd]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFPromoteStar currentController]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFPromoteStar checkUserInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFPromoteStar needUploadUserCer]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFPromoteStar cacheData:block:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar payPwdDidCancel:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar payPwdDidConfirm:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar promoteStar]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar payPwdGetSignRandomFailded:faileMessage:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar payPwdDidFrogetPsw:isSuccess:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar progressHud]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFPromoteStar backVC]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutTextField canPerformAction:withSender:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPGetCouponList updateGetCouponListWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPGetCouponList couponInfoAtIndex:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPGetCouponList rowCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPGetCouponList dataList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPGetCouponList allShow]", 0)}, 0);
setTimeout(function(){hookObjC("-[JapanPostBarcode _barDescriptor:]", 1)}, 0);
setTimeout(function(){hookObjC("-[JapanPostBarcode japanpostContents]", 0)}, 0);
setTimeout(function(){hookObjC("-[JapanPostBarcode generateChecksum]", 0)}, 0);
setTimeout(function(){hookObjC("-[JapanPostBarcode printsCaption]", 0)}, 0);
setTimeout(function(){hookObjC("-[JapanPostBarcode barBottom:]", 1)}, 0);
setTimeout(function(){hookObjC("-[JapanPostBarcode _encodeChar:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController2 jumpPhoneCanReceiveCodeController]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController2 jumpPhoneCanNotReceiveCodeController]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController2 dataSource]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPReplacePhoneViewController2 cardsAndQuestions]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeDetailInfo privilegeDetailInfoWithDict:andInfo:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeDetailInfo voucherListWithVouchers:activityName:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeDetailInfo activityShareUrl]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeDetailInfo privilegeInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeDetailInfo activityType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeDetailInfo activityId]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeDetailInfo useConditions]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeDetailInfo startDate]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeDetailInfo endDate]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeDetailInfo ruleDesc]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeDetailInfo productType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeDetailInfo productValue]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeDetailInfo redbagUrl]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeDetailInfo voucherList]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPAmountTextField bp_amountTextFieldWithFrame:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPAmountTextField bp_amountTextFieldWithFrame:placeholder:delegate:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPCheckoutCounterPayPoint sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint cleanAllData]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint pulloutBandingflow]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint pulloutCheckflow]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint pulloutopenTruesPayFlow]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPCheckoutCounterPayPoint trackElementWithName:properties:controller:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPCheckoutCounterPayPoint trackElementWithAppid:pageId:pageName:pageComment:withDiction:]", 5)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint nameOfPay]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint handleLogin]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint goToRealNameAgain]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint gotoBandingCar]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint gotoPay]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint paySuccess]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint payType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint checkCardNoAgain]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint PullOutbanding]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint checkCardInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint checkSmS]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint checkPwd]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint forgetPwd]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint findPwdSuccess]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint checkTouchID]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint sendSmsTimes]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint startOpenTruesPay]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCounterPayPoint openTruesPaySuccess]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFBarCodePayTool reqBarCodePayFlag:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFBarCodePayTool monitorNetWork]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFBarCodePayTool updateAndUploadOffLineBarCode]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFBarCodePayTool clearExpiryBarCode]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFBarCodePayTool reqOffLineBarCodeList]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFBarCodePayTool cryptoBarcodes:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFBarCodePayTool uploadUsedOfflineBarCodeArray]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFBarCodePayTool saveUsedOffLineBarCodeArray:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutAddSpaceTool textField:replacementString:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutAddSpaceTool orderWithCreditOrder:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPScanManager scanFromController:type:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPShareManager shareInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPShareManager defaultSetting]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPShareManager phoneSupportPlatform]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPShareManager shareWithContent:target:Block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPShareManager shareWithImage:target:Block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPShareManager shareWithContent:image:target:Block:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPShareManager shareWithTitle:content:image:urlString:target:Block:]", 6)}, 0);
setTimeout(function(){hookObjC("-[BPShareManager shareWithTitle:content:image:urlString:shareType:target:Block:]", 7)}, 0);
setTimeout(function(){hookObjC("+[BPShareManager shareWithType:shareType:title:content:image:urlString:target:Block:]", 8)}, 0);
setTimeout(function(){hookObjC("-[BPShareManager shareWithPlatformType:shareType:title:content:image:urlString:target:Block:]", 8)}, 0);
setTimeout(function(){hookObjC("-[BPShareManager shareTextToPlatformType:content:target:Block:]", 4)}, 0);
setTimeout(function(){hookObjC("-[BPShareManager shareImageToPlatformType:image:target:Block:]", 4)}, 0);
setTimeout(function(){hookObjC("-[BPShareManager shareImageAndTextToPlatformType:content:image:target:Block:]", 5)}, 0);
setTimeout(function(){hookObjC("-[BPShareManager shareWebPageToPlatformType:title:content:image:urlString:target:Block:]", 7)}, 0);
setTimeout(function(){hookObjC("-[BPShareManager alertWithError:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPShareManager checkError:errorMsg:Block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPShareManager shareWithFormType:shareType:title:content:image:urlString:target:Block:]", 8)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder orderInfoEncoded:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder orderItemWithKey:andValue:encoded:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder encodeValue:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder strToMd5:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder merchantId]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder posId]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder branchId]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder txCode]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder orderId]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder curCode]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder thirdAppInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder installNum]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder callJS]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutCCBSdkOrder clientIp]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeStoreCategoryInfo privilegeStoreCategoryWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeStoreCategoryInfo privilegeStoreCategoryListWithDicts:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreCategoryInfo categoryName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreCategoryInfo categoryId]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreCategoryInfo categoryImg]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDBarcode checkDigit]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDBarcode printsCaption]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDBarcode generateChecksum]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDBarcode _encodeChar:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDBarcode completeBarcode]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDBarcode barBottom:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDBarcode firstBar]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDBarcode lastBar]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDBarcode encodeWithCoder:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutThirdManager controlJump]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutThirdManager handleCurrentVersion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutThirdManager handleHigherVersion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutThirdManager jumpToPay:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutThirdManager tabBarController]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutThirdManager pDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutThirdManager merchantUrl]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckOutThirdManager merchIDStr]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckOutFormatter validString:regx:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckOutFormatter validIdentityCard:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckOutFormatter validName:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckOutFormatter validSmsVerifyCode:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckOutFormatter validDigital:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckOutFormatter validImgVerifyCode:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckOutFormatter validPhoneNumber:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckOutFormatter validFirstIdentityCard:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckOutFormatter validGangAoTongXingZheng:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckOutFormatter validTaiWanTongXingZheng:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFTouchIDTool sharedTool]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFTouchIDTool systemCanEvaluateTouchID:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFTouchIDTool canEvaluateTouchIDType:reply:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFTouchIDTool evaluateTouchIDReason:inputPassWordAndAgain:reply:]", 3)}, 0);
setTimeout(function(){hookObjC("-[YZFTouchIDTool descForTouchIDError:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFTouchIDTool reasonForApp:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFTouchIDTool laContext]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeStoreDetailInfo privilegeStoreDetailWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo voucherList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo activityName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo activityId]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo activityType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo promotionType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo promotionValue]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo attributePromotionValue]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo startDate]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo endDate]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo ruleDesc]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo useConditions]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo productType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo productValue]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo redbagUrl]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo activityShareUrl]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo merchantPicLink]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo voucherFlag]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo valueType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo privilegeType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo tagImageName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo needBindBanKCard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo needRedbag]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreDetailInfo needDianXin]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFCommonToolForAES shareLocation]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES YZFAESWithDic:withKindCode:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES YZFAESWithString:withKindCode:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCommonToolForAES ret32bitString]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES clearAllinfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES publickAESKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES SignPayPwd]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES digitalSignCer]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES SignResult]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES transferSeq]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES sessionID]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES keyIndex]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES t_accId]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES t_merId]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES t_token]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES t_kid]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES makeRealName]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES aesRandomId]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES scratchStr]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCommonToolForAES orderInfo]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPLobbyManager sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager resetData]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager loginSuccessed:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager applicationDidBecomeActiveNotification:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager reqVersionInfoAndCheckHallVersion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager updateBankLogo]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager versionFor:isEqualToVersionFor:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager saveOnlineVersion:toLocal:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager saveAdvertiseVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager saveResourceVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager saveApplistVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager saveAppSecurityVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager saveBankLogoVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager updateAdvertiseList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager lobbyUpdateAdList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager updateResouceList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager saveResourseList:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager downloadLaunchImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager updateHallVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager adHomeList]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager contentVersions]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPLobbyManager resourceList]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPLobbyManager clearCache]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPLobbyManager deprecatedFiles]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPCheckoutPaySms sendMessageWithPasswordWithOrder:withSource:withSms:withPayMoney:withBlock:]", 5)}, 0);
setTimeout(function(){hookObjC("+[BPCheckoutPaySms PayWithBankTypeKey:withOrder:withPayDic:withDic:]", 4)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutPaySms enterType]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFRemoteDataManager dbFilePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFRemoteDataManager addNewRemoteNotification:withProductno:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCameraDevice cameraEnable:errorBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCameraDevice requestAccessWithCompletionHandler:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutSourcesInfo balanceInfoWithDic:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutSourcesInfo sourceDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutSourcesInfo textName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutSourcesInfo imageName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutSourcesInfo detailText]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutSourcesInfo canSelectUse]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutSourcesInfo bankFavourableDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPCheckoutSourcesInfo lastFourCardNo]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckOutIntegral integralWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFFlowBaseData productNo]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFFlowBaseData sessionKey]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPCheckoutReachabilityTool checkIsHaveNetwork]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPCheckoutReachabilityTool checkNetworkStatus]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPCheckoutReachabilityTool checkNetworkStatusWithBlock:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeStoreInfo privilegeStoreInfoWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeStoreInfo privilegeStoreInfoListWithDicts:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo tagName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo activityType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo activityId]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo activityName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo activityCategory]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo promotionType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo valueType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo promotionValue]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo attributePromotionValue]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo merchantPic]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo merchantNewPic]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo pageTitle]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo voucherFlag]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo productValue]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo merchantDistance]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo redBagUserOnly]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo outsideLink]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo outsideOriginalPrice]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo outsiteActivityType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo needBindBanKCard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo needRedbag]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeStoreInfo needDianXin]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPRequestCacheConfiguration configurationWithCachePolicy:cacheSessionKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestCacheConfiguration configurationWithCachePolicy:cacheExpiredInterval:cacheSessionKey:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPRequestCacheConfiguration cachePolicy]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestCacheConfiguration cacheExpiredInterval]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestCacheConfiguration cacheSessionKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPasswordTextField requestSignRandomNumWithProductNo:sessionKey:resultBlock:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPPasswordTextField removeSpaceCharacters:]", 1)}, 0);
setTimeout(function(){hookObjC("-[PassGuardTextField checkLoginPassword]", 0)}, 0);
setTimeout(function(){hookObjC("-[PassGuardTextField checkPayPassword]", 0)}, 0);
setTimeout(function(){hookObjC("-[PGPayTextField OnChar:Char:]", 2)}, 0);
setTimeout(function(){hookObjC("-[PGPayTextField pgp_delegate]", 0)}, 0);
setTimeout(function(){hookObjC("-[PGPayTextField inputCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[PGPayTextField pointRect]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFAudioServiceTool PlaySystemSoundWithAudioName:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFAudioServiceTool audioForType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPRedbagShareTool createQRCodeWithUrlString:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPRedbagShareTool saveQR:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPRedbagShareTool cancelSave:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPRedbagShareTool shareWithUrlString:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPRedbagShareTool urlString]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestMerchantNewInfoWithID:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestPswPay:psw:enCode:block:]", 4)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestSendSms:cardDic:bankCode:withPayMoney:block:]", 5)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestBestCardPayPsdWithCardNo:pwd:productNo:enCode:block:]", 5)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestRechargeSupportedBankList:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestFundsSourcesApiByOrder:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestEquipmentInfo:withOrderInfo:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestBankInformationWithAccount:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestStarLevelAboutAccount:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestForCheckAllPwd:withPwd:withIsOnlyCheckPwd:withBlock:]", 4)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestForCheckBankCardWithBankCardNum:withOrder:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI handleSecurityNumberAndCardNumber:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestForSendMessageWithDictionary:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestBindAndPay:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestBindCardWithParams:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestPubKeyRandomNoByAcc:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI checkoutSMSCodeApiBy:andAccID:andSmsVerifyCode:block:]", 4)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI onlyCheckoutSMSCodeApiBy:andAccID:andSmsVerifyCode:block:]", 4)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI uploadingCommercialTenantUrlApiBy:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI attestationAndExemptLoginByMerchantUrl:andDefault:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI validateAllOrderData:withBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestGetShareRedBagurl:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI bindingVoucherToUserWith:andDic:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestForCheckPasswordWithDictionary:model:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestForSafePayApiWithModel:dictionary:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI goToPayWithTouchID:dictionary:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI paymentResultPollingWithOrder:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI handelRemoveTransferCertificateAPI:withBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI integralRechargeWithOrder:andDictionary:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI truePayCreditExtensionApiWithOrder:withBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterAPI requestBestpayCardLimitApi:withBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("-[NKDCode39Barcode _encodeChar:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDCode39Barcode generateChecksum]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFlowDataCachesPool saveFlowBaseData:withIdentifer:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFFlowDataCachesPool freeFlowBaseDataWithIdentifer:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFFlowDataCachesPool baseModelWithIdentifer:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFFlowDataCachesPool removeBaseDataWithIdentifer:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFFlowDataCachesPool updateSessionKey:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFFlowDataCachesPool shareInstance]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFFlowDataCachesPool allocWithZone:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFFlowDataCachesPool logWithIndentifer:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFFlowDataCachesPool dataCachesPool]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFRotateSliderDial dialWithFrame:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSliderDial chassisImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSliderDial totalCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFRotateSliderDial highlightedCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[BankInfo toString]", 0)}, 0);
setTimeout(function(){hookObjC("-[BankInfo bankName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BankInfo cardName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BankInfo cardType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BankInfo cardNum]", 0)}, 0);
setTimeout(function(){hookObjC("-[BankInfo validDate]", 0)}, 0);
setTimeout(function(){hookObjC("-[BankInfo fullImg]", 0)}, 0);
setTimeout(function(){hookObjC("-[BankInfo cardNumImg]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPAuthorizationTool checkAndRequestAuthorizationWithType:resultBack:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPAuthorizationTool requestPhotosAuthorizationResultBack:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPAuthorizationTool requestCameraAuthorizationResultBack:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPAuthorizationTool requestContactsAuthorizationResultBack:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPAuthorizationTool executeCallBack:status:privacyType:]", 3)}, 0);
setTimeout(function(){hookObjC("-[NKDCode128Barcode codeSet]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDCode128Barcode generateChecksum]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDCode128Barcode _valueForChar:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDCode128Barcode _charForValue:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDCode128Barcode _encodeChar:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDCode128Barcode _canEncodeChar:withSet:]", 2)}, 0);
setTimeout(function(){hookObjC("-[NKDCode128Barcode _encodeChar:withSet:]", 2)}, 0);
setTimeout(function(){hookObjC("-[NKDCode128Barcode _bestCodeSetForContent]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDCode128Barcode _shiftCharacterForSet:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDCode128Barcode _encodeNumberPair:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard layoutSubviews]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard keyBoardCome]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard blackLineArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard blackCircleArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard closeOrBack]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard forgetPassword]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard cleanAllSetAboutKeyBoard]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard keyboardwillShow:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard callBackKeyBoard]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard refreshUI]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard OnChar:Char:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard pgTextFieldShouldReturn:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard titleStr]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard passworldTextField]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard cipherKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard handleUI]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutPayKeyboard heightSpace]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPCVImageUtils pixelBufferFromCGImage:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPCVImageUtils sampleBufferFromCGImage:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPCVImageUtils newBitmapRGBA8ContextFromImage:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPCVImageUtils newpPixelBufferFromCGImage:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPayTextField BPNumTextField:didSelectTheNumKeyWithString:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPPayTextField requestSignRandomNumWithProductNo:sessionKey:resultBlock:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPPayTextField cipherResult]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPayTextField removeSpaceCharacters:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPayTextField canPerformAction:withSender:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPPayTextField cipherKeyID]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPayTextField inputCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPayTextField pointRect]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPrivilegeCityInfo privilegeCityInfoWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeCityInfo cityCode]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeCityInfo cityName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeCityInfo cityPinYin]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeCityInfo cityShouZiMu]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPrivilegeCityInfo cityFirstLetter]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPBuriedCheckstandPoint buriedCheckstandPointWithOrder:withDefaultSourceArray:withAllAourceArray:withFavouriableArray:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPBuriedCheckstandPoint handlePayType:withFavourableArray:withOrderMoney:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPBuriedCheckstandPoint handleFavourableMoney:withOrderMoney:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPBuriedCheckstandPoint buriedNowayPayReasonWithOrder:withPaySources:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPBuriedCheckstandPoint handleTheReasonOfNopay:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPBuriedCheckstandPoint buriedPwdCheck:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPBuriedCheckstandPoint buriedPayResult:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPBuriedCheckstandPoint burideTrueOneOpenPayShow:withallSource:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPMessageDataManager shareDataManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPMessageDataManager checkTemplateType:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPMessageDataManager checkTemplateType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPMessageDataManager checkBizType:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPMessageDataManager checkBizType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPMessageDataManager saveNewsDataWithNewsDict:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPMessageDataManager deleteNewsWithBusinessType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPMessageDataManager readNewsCategoryWithBusinessType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPMessageDataManager deleteCategoryWithBusinessType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPMessageDataManager queryMessageCategoryWithBusinessType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPMessageDataManager queryCategoryWithBusinessType:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPMessageDataManager saveNewsDataWithNewsDict:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPMessageDataManager deleteNewsWithBusinessType:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPMessageDataManager readNewsCategoryWithBusinessType:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPMessageDataManager deleteCategoryWithBusinessType:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPMessageDataManager queryMessageCategoryWithBusinessType:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPMessageDataManager queryCategoryWithBusinessType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFValidDateKeyboard monthsSource]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFValidDateKeyboard yearsSource]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFValidDateKeyboard SelectedDate]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFValidDateKeyboard keyboardTool]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVoiceAssistantWave updateWave1]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVoiceAssistantWave updateWave2]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVoiceAssistantWave updateWave3]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVoiceAssistantWave updateWave:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPVoiceAssistantWave waveLayer1]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVoiceAssistantWave waveLayer2]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPVoiceAssistantWave waveLayer3]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPActivityIndicatorHeader placeSubviews]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPARManager reloadDataWithLocationCoordinate2D:poiItems:target:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPARManager checkItems:locationCoordinate2D:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPARManager computerCenterWithItems:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFReceiveMessage layoutSubviews]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReceiveMessage blackLineArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReceiveMessage numberLabArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReceiveMessage cleaAllSms]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReceiveMessage closeOrBack]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReceiveMessage messageTextField]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReceiveMessage SMSbutton]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReceiveMessage smsTimer]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReceiveMessage addstrArr]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReceiveMessage handleUI]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFReceiveMessage detailsStr]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderManager shareManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSenderManager retrySenders]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSenderManager senderRequest:resultBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSenderManager senderTokenAuthRequest:resultBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSenderManager authRequestSender]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSenderManager resendRequestsWithTokenAuthInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSenderManager callbackRequestWithTokenAuthErrorCode:errorDesc:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSenderManager callbackRequestForLogout:errorDesc:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderManager startRequest:result:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPRequestSenderManager startRequest:result:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPRequestSenderManager cancelRequest:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService valueForKey:fromXml:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService requestForAllPayPwd:withPayPwd:withIsOnlyCheckPwd:withBlock:]", 4)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService requestForCheckBankCardWithBankCardNum:withOrder:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService requestForBindBankCardAndPay:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService requestForBindCardWithParams:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService requestStarLevelAboutAccount:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService requestBankInformationWithAccount:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService rechargeGetSupportedBankList:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService sendEquipmentInfo:withOrderInfo:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService accessFundsSources:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService payByBalance:paymentPW:enCode:block:]", 4)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService smsSend:bankCode:cardDic:withPayMoney:block:]", 5)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService bestCardPayPsdWithCardNo:pwd:productNo:enCode:block:]", 5)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService handleUserNumberAndcardNumber:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService requestForSendMessageWithDictionary:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService uploadingCommercialTenantUrlServiceBy:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService attestationAndExemptLoginServiceByMerchantUrl:andDefault:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService validateOrderData:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService requestRedBagShareNewUrl:block:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService bindingVoucherToUserWith:andInfoDic:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService requestForPasswordWithDictionary:model:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService requestForSafePayWithModel:dictionary:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService goToPayWithTouchIDServe:dictionary:block:]", 3)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutCounterService pollingResultsWithModel:Interval:andNumTimes:block:]", 4)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService handelRemoveTransferCertificate:withBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService reloadNewSessionkeyBlock:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService integralRechargeServiceWithOrder:andDictionary:block:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService checkCode:autoLoginResult:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService truePayCreditExtensionServiceWithOrder:withBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService requestBestpayCardHandle:withBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterService createErrorDicWithError:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutCounterService myTimer]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDEAN8Barcode generateChecksum]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDEAN8Barcode barBottom:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterRequestClient sharedManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutCounterRequestClient POST:parameters:progress:success:failure:]", 5)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterRequestClient commonParams]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDRoyalMailBarcode printsCaption]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDRoyalMailBarcode _encodeChar:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDRoyalMailBarcode _barDescriptor:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDRoyalMailBarcode barBottom:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDRoyalMailBarcode generateChecksum]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPushVoicePlayer sharedPlayer]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPushVoicePlayer playPushInfo:completed:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPPushVoicePlayer decodePushExtra:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPushVoicePlayer playMoneyReceived:completed:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPPushVoicePlayer audioPlayerDidFinishPlaying:successfully:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPPushVoicePlayer activePlayback]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPushVoicePlayer disActivePlayback]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPushVoicePlayer playCompleted]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPPushVoicePlayer digitUppercase:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPPushVoicePlayer audioPlayer]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFBackPayPwdJump sharedPayPwdJump]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFBackPayPwdJump startJumpWithType:pushVC:backVC:delegate:]", 4)}, 0);
setTimeout(function(){hookObjC("-[YZFBackPayPwdJump startJumpWithType:pushVC:backVC:delegate:]", 4)}, 0);
setTimeout(function(){hookObjC("-[YZFBackPayPwdJump jumpToSafetyInspectionVC]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFBackPayPwdJump backPayPwdModel]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPMerchantInfo merchantListWithDicts:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPMerchantInfo merchantInfoWithDict:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPMerchantInfo shopName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPMerchantInfo locationLatitude]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPMerchantInfo locationLongitude]", 0)}, 0);
setTimeout(function(){hookObjC("+[SelectTab newSelectTab:Titles:]", 2)}, 0);
setTimeout(function(){hookObjC("-[SelectTab selectedIndex]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFUserBond toLogin]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFUserBond checkAndLogin:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFUserBond checkoutLogin]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFUserBond loginByToken:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YZFUserBond standardBond]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFUserBond b_fromLogin]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFUserBond tempLoginInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFUserBond loginSuccessBlock]", 0)}, 0);
setTimeout(function(){hookObjC("+[YZFCheckoutCounterTool sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutCounterTool sessionKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutCounterTool appSessionKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFCheckoutCounterTool thirdSessionKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFXMLControl needLogin]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFXMLControl appId]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFXMLControl className]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFXMLPage dictParams]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPTalkingData sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPTalkingData tdDeviceID]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPTalkingData trackElementName:controller:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPTalkingData trackElementName:properties:controller:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPTalkingData track:withProperties:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPTalkingData trackEventWithName:controller:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPTalkingData displayIdentifier:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPTalkingData dictPageNames]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPTalkingData moduleName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPTalkingData pageName]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFSearchTextField editingRectForBounds:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFSearchTextField textRectForBounds:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YZFAuthenticator id_fimage]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFAuthenticator id_bimage]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFAuthenticator sessionKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFAuthenticator frontImageS]", 0)}, 0);
setTimeout(function(){hookObjC("-[YZFAuthenticator backImageS]", 0)}, 0);
setTimeout(function(){hookObjC("-[NKDUPCEBarcode parityForDigit:]", 1)}, 0);
setTimeout(function(){hookObjC("-[NKDUPCEBarcode barBottom:]", 1)}, 0);
setTimeout(function(){hookObjC("+[NKDUPCEBarcode UPCAToUPCE:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPFilterPanel loadTitles]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFilterPanel selectedModelAtGroupIndex:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPFilterPanel resetSelectedOptions]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFilterPanel itemGroups]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFilterPanel titleBttons]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFilterPanel groupIndex]", 0)}, 0);
setTimeout(function(){hookObjC("-[LFBuybutton layoutSubviewssss]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool historyCityCodeWith:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool allHistoryCity]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool updateCityName:cityCode:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool readCityCodeVersion]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool updateCityCodeVersion:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool readLocatedLocationInfo]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool updateLocatedLongitude:andLatitude:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool updateLocatedCity:cityCode:cityLongitude:cityLatitude:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool readLocatedCityInfo]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool readLocatedCity]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool updateLocatedCity:code:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool updateInvalidPrivilege:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool readCityCode:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool searchedCityListWithText:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool readCityDicts]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool updateCityCodesWithProvinceList:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool openDB]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool closeDB]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPPersonalFinanceDBTool dbPath]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPFaceLivenessDetectionConfiguration configurationWithDetectionType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPFaceLivenessDetectionConfiguration detectionType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFaceLivenessDetectionConfiguration randomActionMode]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFaceLivenessDetectionConfiguration randomActionCouts]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFaceLivenessDetectionConfiguration designatedActionTypes]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFaceLivenessDetectionConfiguration canSwitchCamera]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPFaceLivenessDetectionConfiguration cameraDirectionFront]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPDebugH5PackageManager sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPDebugH5PackageManager versionOfPropertiesFile:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPDebugH5PackageManager arrayModels]", 0)}, 0);
setTimeout(function(){hookObjC("-[AspectTracker trackedClass]", 0)}, 0);
setTimeout(function(){hookObjC("-[AspectTracker selectorNames]", 0)}, 0);
setTimeout(function(){hookObjC("-[AspectTracker parentEntry]", 0)}, 0);
setTimeout(function(){hookObjC("+[AspectIdentifier identifierWithSelector:object:options:block:error:]", 5)}, 0);
setTimeout(function(){hookObjC("-[AspectIdentifier invokeWithInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AspectIdentifier blockSignature]", 0)}, 0);
setTimeout(function(){hookObjC("-[AspectsContainer hasAspects]", 0)}, 0);
setTimeout(function(){hookObjC("-[AspectsContainer addAspect:withOptions:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AspectsContainer removeAspect:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AspectsContainer beforeAspects]", 0)}, 0);
setTimeout(function(){hookObjC("-[AspectsContainer insteadAspects]", 0)}, 0);
setTimeout(function(){hookObjC("-[AspectsContainer afterAspects]", 0)}, 0);
setTimeout(function(){hookObjC("-[AspectInfo originalInvocation]", 0)}, 0);
setTimeout(function(){hookObjC("-[FMStatement useCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[FMStatement inUse]", 0)}, 0);
setTimeout(function(){hookObjC("-[IQSegmentedNextPrevious segmentedControlHandler:]", 1)}, 0);
setTimeout(function(){hookObjC("+[SADesignerDeviceInfoRequestMessage defaultDeviceId]", 0)}, 0);
setTimeout(function(){hookObjC("-[SADesignerDeviceInfoRequestMessage responseCommandWithConnection:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SADesignerDeviceInfoResponseMessage libName]", 0)}, 0);
setTimeout(function(){hookObjC("-[SADesignerDeviceInfoResponseMessage systemName]", 0)}, 0);
setTimeout(function(){hookObjC("-[SADesignerDeviceInfoResponseMessage systemVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[SADesignerDeviceInfoResponseMessage appVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[SADesignerDeviceInfoResponseMessage deviceId]", 0)}, 0);
setTimeout(function(){hookObjC("-[SADesignerDeviceInfoResponseMessage deviceName]", 0)}, 0);
setTimeout(function(){hookObjC("-[SADesignerDeviceInfoResponseMessage libVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[SADesignerDeviceInfoResponseMessage deviceModel]", 0)}, 0);
setTimeout(function(){hookObjC("-[SADesignerDeviceInfoResponseMessage mainBundleIdentifier]", 0)}, 0);
setTimeout(function(){hookObjC("-[SADesignerEventBindingRequestMessage responseCommandWithConnection:]", 1)}, 0);
setTimeout(function(){hookObjC("+[SADesignerTrackMessage messageWithPayload:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SAEventBindingCollection updateBindingsWithPayload:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SAEventBindingCollection updateBindingsWithEvents:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SADesignerSnapshotRequestMessage responseCommandWithConnection:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SADesignerSnapshotResponseMessage serializedObjects]", 0)}, 0);
setTimeout(function(){hookObjC("-[SADesignerSnapshotResponseMessage imageHash]", 0)}, 0);
setTimeout(function(){hookObjC("-[SASequenceGenerator nextValue]", 0)}, 0);
setTimeout(function(){hookObjC("-[SAObjectFilter apply:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SAObjectFilter applyReverse:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SAObjectFilter appliesTo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SAObjectFilter appliesToAny:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SAObjectFilter nameOnly]", 0)}, 0);
setTimeout(function(){hookObjC("-[SAPropertySelectorDescription selectorName]", 0)}, 0);
setTimeout(function(){hookObjC("-[SAPropertySelectorDescription returnType]", 0)}, 0);
setTimeout(function(){hookObjC("-[SAServerUrl check:]", 1)}, 0);
setTimeout(function(){hookObjC("+[SAPassThroughValueTransformer transformedValueClass]", 0)}, 0);
setTimeout(function(){hookObjC("+[SAPassThroughValueTransformer allowsReverseTransformation]", 0)}, 0);
setTimeout(function(){hookObjC("-[SAPassThroughValueTransformer transformedValue:]", 1)}, 0);
setTimeout(function(){hookObjC("+[SANSNumberToCGFloatValueTransformer transformedValueClass]", 0)}, 0);
setTimeout(function(){hookObjC("+[SANSNumberToCGFloatValueTransformer allowsReverseTransformation]", 0)}, 0);
setTimeout(function(){hookObjC("-[SANSNumberToCGFloatValueTransformer transformedValue:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SAIOConsumer bytesNeeded]", 0)}, 0);
setTimeout(function(){hookObjC("-[SAIOConsumer readToCurrentFrame]", 0)}, 0);
setTimeout(function(){hookObjC("-[SAIOConsumer unmaskBytes]", 0)}, 0);
setTimeout(function(){hookObjC("-[SAIOConsumerPool consumerWithScanner:handler:bytesNeeded:readToCurrentFrame:unmaskBytes:]", 5)}, 0);
setTimeout(function(){hookObjC("-[SAIOConsumerPool returnConsumer:]", 1)}, 0);
setTimeout(function(){hookObjC("+[SensorsAnalyticsExceptionHandler sharedHandler]", 0)}, 0);
setTimeout(function(){hookObjC("-[SensorsAnalyticsExceptionHandler addSensorsAnalyticsInstance:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SensorsAnalyticsExceptionHandler sa_handleUncaughtException:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SensorsAnalyticsExceptionHandler defaultExceptionHandler]", 0)}, 0);
setTimeout(function(){hookObjC("-[SensorsAnalyticsExceptionHandler prev_signal_handlers]", 0)}, 0);
setTimeout(function(){hookObjC("-[SensorsAnalyticsExceptionHandler sensorsAnalyticsSDKInstances]", 0)}, 0);
setTimeout(function(){hookObjC("-[SensorsAnalyticsPeople unset:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SensorsAnalyticsPeople increment:by:]", 2)}, 0);
setTimeout(function(){hookObjC("-[SensorsAnalyticsPeople increment:]", 1)}, 0);
setTimeout(function(){hookObjC("-[SensorsAnalyticsPeople append:by:]", 2)}, 0);
setTimeout(function(){hookObjC("-[SensorsAnalyticsPeople deleteUser]", 0)}, 0);
setTimeout(function(){hookObjC("-[TTTAttributedLabelLink accessibilityValue]", 0)}, 0);
setTimeout(function(){hookObjC("-[TTTAttributedLabelLink encodeWithCoder:]", 1)}, 0);
setTimeout(function(){hookObjC("-[TTTAttributedLabelLink activeAttributes]", 0)}, 0);
setTimeout(function(){hookObjC("-[TTTAttributedLabelLink inactiveAttributes]", 0)}, 0);
setTimeout(function(){hookObjC("-[TTTAttributedLabelLink linkTapBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[TTTAttributedLabelLink linkLongPressBlock]", 0)}, 0);
setTimeout(function(){hookObjC("+[YYImageFrame frameWithImage:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YYImageFrame offsetX]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageFrame offsetY]", 0)}, 0);
setTimeout(function(){hookObjC("+[YYImageDecoder decoderWithData:scale:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder updateData:final:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder frameDurationAtIndex:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder framePropertiesAtIndex:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder imageProperties]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder _updateData:final:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder _framePropertiesAtIndex:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder _imageProperties]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder _updateSource]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder _updateSourceWebP]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder _updateSourceAPNG]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder _updateSourceImageIO]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder _newUnblendedImageAtIndex:extendToCanvas:decoded:]", 3)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder _createBlendContextIfNeeded]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder _blendImageWithFrame:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder _newBlendedImageWithFrame:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder frameCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageDecoder loopCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder addImage:duration:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder addImageWithData:duration:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder addImageWithFile:duration:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder _imageIOAvaliable]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder _newImageDestination:imageCount:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder _encodeImageWithDestination:imageCount:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder _newCGImageFromIndex:decoded:]", 2)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder _encodeWithImageIO]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder _encodeWithImageIO:]", 1)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder _encodeAPNG]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder _encodeWebP]", 0)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder encodeToFile:]", 1)}, 0);
setTimeout(function(){hookObjC("+[YYImageEncoder encodeImage:type:quality:]", 3)}, 0);
setTimeout(function(){hookObjC("+[YYImageEncoder encodeImageWithDecoder:type:quality:]", 3)}, 0);
setTimeout(function(){hookObjC("-[YYImageEncoder loopCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[CALayer yy_imageURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[CALayer yy_setImageWithURL:placeholder:]", 2)}, 0);
setTimeout(function(){hookObjC("-[CALayer yy_setImageWithURL:options:]", 2)}, 0);
setTimeout(function(){hookObjC("-[CALayer yy_setImageWithURL:placeholder:options:completion:]", 4)}, 0);
setTimeout(function(){hookObjC("-[CALayer yy_setImageWithURL:placeholder:options:progress:transform:completion:]", 6)}, 0);
setTimeout(function(){hookObjC("-[CALayer yy_setImageWithURL:placeholder:options:manager:progress:transform:completion:]", 7)}, 0);
setTimeout(function(){hookObjC("-[CALayer yy_cancelCurrentImageRequest]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPOCRSDKBundle sharedBundle]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPOCRSDKBundle bundleName]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPOCRSDKBundle imageWithFileName:type:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPOCRSDKBundle imageNamed:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPOCRSDK finishEngine]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPOCRSDK startIDCardScan:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPOCRSDK readIDCardImage:image:completed:failed:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPOCRSDK requestCameraAuthorizationWithCompletionHandler:]", 1)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager motionManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager motionQueue]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager errorManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager starDetection]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager starDetectionWithStep:]", 1)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager recoveryData:]", 1)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager stopDetection]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager onFrameDetected:andTimeout:]", 2)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager detectionTypeQualityFinish]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager onDetectionSuccess:]", 1)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager onDetectionFailed:]", 1)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager detectWithBuffer:orientation:]", 2)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager sessionManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager finishFlag]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionManager livenessDetector]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessSessionManager congiureCaptureSession]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessSessionManager cameraWithPosition:]", 1)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessSessionManager callbackError:]", 1)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessSessionManager captureOutput:didOutputSampleBuffer:fromConnection:]", 3)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessSessionManager startSession]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessSessionManager stopSession]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessSessionManager switchCameraWithCompletion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessSessionManager captureDevicePosition]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessSessionManager captureVideoPreviewLayer]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessSessionManager captureSession]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessSessionManager captureVideoDataOutput]", 0)}, 0);
setTimeout(function(){hookObjC("+[OMCCFaceLivenessDetectionResult encryptImage:withFactor:]", 2)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionResult decryptString:withFactor:]", 2)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionResult livenessImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionResult fullFaceImgs]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionResult originalCroppedFaceImgs]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessDetectionResult croppedFaceImgs]", 0)}, 0);
setTimeout(function(){hookObjC("-[MGLiveErrorManager errprStringWithType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MGLiveErrorManager checkImgWithMGFrame:motionY:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MGLiveErrorManager resetErrorList]", 0)}, 0);
setTimeout(function(){hookObjC("-[MGLiveErrorManager errorArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[MGLiveErrorManager tempArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessActionManager nextActionArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessActionManager nextType]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFaceLivenessActionManager resetAction]", 0)}, 0);
setTimeout(function(){hookObjC("+[MGLiveBundle LivePathForResource:ofType:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MGLiveBundle LivePathForResource:ofType:inDirectory:]", 3)}, 0);
setTimeout(function(){hookObjC("+[MGLiveBundle LiveBundleString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MGLiveBundle LiveImageWithName:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MGFaceQualityManager feedFrame:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MGFaceQualityManager needHolding]", 0)}, 0);
setTimeout(function(){hookObjC("-[MGFaceQualityManager yawThreshold]", 0)}, 0);
setTimeout(function(){hookObjC("-[MGFaceQualityManager pitchThreshold]", 0)}, 0);
setTimeout(function(){hookObjC("-[MGFaceQualityManager integrityThreshold]", 0)}, 0);
setTimeout(function(){hookObjC("-[MGFaceQualityManager motionBlurThreshold]", 0)}, 0);
setTimeout(function(){hookObjC("-[MGFaceQualityManager gaussianBlurThreshold]", 0)}, 0);
setTimeout(function(){hookObjC("-[MGFaceQualityManager faceCentre]", 0)}, 0);
setTimeout(function(){hookObjC("-[MGFaceQualityManager tempFaceFrameCount]", 0)}, 0);
setTimeout(function(){hookObjC("+[FaceQualityEval addFrame:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetectionFrame compare:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetectionFrame croppedImageOfFace]", 0)}, 0);
setTimeout(function(){hookObjC("+[FaceIDData dataWithBestFrame:andBestFrameData:andActionFrames:andLog:andBadActionFrame:]", 5)}, 0);
setTimeout(function(){hookObjC("+[MGLivenessDetector detectorOfOptions:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MGLivenessDetector detectorOfOptions:andDispatchQueue:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetector imageFromSampleBuffer:orientation:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetector detectWithBuffer:orientation:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetector detectWithImage:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetector changeDetectionType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetector appendAlgorithmLog:errorInfo:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetector taskFailed:error:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetector processImage:hash:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetector clearInternalData]", 0)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetector updateBadActionFrame:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetector resetAction]", 0)}, 0);
setTimeout(function(){hookObjC("-[MGLivenessDetector saveAlgorithmLog]", 0)}, 0);
setTimeout(function(){hookObjC("+[MGLivenessDetector clearCachedAlgorithmLog]", 0)}, 0);
setTimeout(function(){hookObjC("+[MGLivenessDetector takeLicenseFromNetworkWithUUID:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MGLivenessDetector checkCachedLicense]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPBankInfoUtil bankNumPutCheckWithTextField:range:changeString:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPBankInfoUtil userCardPutCheckWithTextField:range:changeString:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPBankInfoUtil bankNumPutTextFieldDidChange:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPBankInfoUtil phoneNumPutCheckWithTextField:range:changeString:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPBankInfoUtil checkIputMoeny:Range:replacementString:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPBankInfoUtil makeBankNumOrPhoneNumWithString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPBankInfoUtil addSpaceToBankCardString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPBankInfoUtil addSpaceToPhoneNumString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPAuthorizationUtil notificationAuthorizationStatus:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPAuthorizationUtil notificationAuthorizationStatus]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil base64encode:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil base64decode:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_stripPublicKeyHeader:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_addPublicKey:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_encryptData:withKeyRef:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_decryptData:withKeyRef:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_RSAEncryptData:publicKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_RSAEncryptString:publicKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_RSADecryptData:publicKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_RSADecryptString:publicKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_tripleDESEncrypt:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_tripleDESDecrypt:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil tripleDES:encryptOrDecrypt:withKey:encoding:]", 4)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil stringFromHexString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil dataFromBase64EncodedString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil base64EncodedStringFromData:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPUUIDUtil deviceUUID]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPUUIDUtil deviceID]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPUUIDUtil generatorDeviceId]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPUUIDUtil encryptUUID:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPUUIDUtil checkDeviceIdAvailable:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPContactUtil pickAddressBookCompletion:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPContactUtil transformToPinyin:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPContactUtil sortArray:withKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPContactUtil requestAccessWithCompletionHandler:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPContactUtil checkAccessWithCompletionHandler:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_base64EncodedDataFromData:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_base64EncodedDataFromString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_base64EncodedStringFromData:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_base64EncodedStringFromString:encoding:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_base64EncodedStringFromString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_dataFromBase64EncodedData:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_dataFromBase64EncodedString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_stringFromBase64EncodedString:encoding:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_stringFromBase64EncodedString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_AES256EncryptData:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_AES256DecryptData:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_AES256EncryptString:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_AES256DecryptString:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_AES128EncryptData:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_AES128DecryptData:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_AES128EncryptString:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_AES128DecryptString:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_md5:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_md5:type:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_getFileMD5WithPath:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_DESEncryptData:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_DESDecryptData:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_DESEncryptString:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPEncryptorUtil bp_DESDecryptString:key:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField configData]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField editingChanged:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField EditingDidBegin:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField creatBPSafeWordKeyBoard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField BPSafeWordKeyBoard:didSelectTheWordKeyWithString:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField putCharacter:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField clearChar]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField syncKernelInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField BPWord_delegate]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField maskChar]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField openKeyBoardAudio]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField keyBoardAudioID]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField customKeyBoardAudioPath]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField BP_returnKeyType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField keyBoardBackgroundImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField safeWordKeyBoard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPWordTextField putCharacterCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard configData]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard creatNumKeyBoard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard changeNumbers]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard randomNumbersWithNumbers:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard numberKey:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard deletePressed:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard deletedLongPress:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard longPressAction_timer:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard deleteNumbers]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard playAudio]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard putCharacter:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard delLastChar]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard clearChar]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard syncKernelInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard hostTextField]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard numberKeys]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard keyBoardBackgroundImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard maskString]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard openKeyBoardAudio]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard keyBoardAudioID]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard customKeyBoardAudioPath]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard pNumKeyboardGuard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard inputLength]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard realVauleString]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard prisonBreak]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeNumKeyBoard deletedTimer]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled configData]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled editingChanged:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled creatBPSafeNumberKeyBoard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled BPSafeNumKeyBoard:didSelectTheNumKeyWithString:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled putCharacter:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled clearChar]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled syncKernelInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled BPNum_delegate]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled maskChar]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled keyBoardBackgroundImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled openKeyBoardAudio]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled keyBoardAudioID]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled customKeyBoardAudioPath]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPNumTextFiled safeNumberKeyBoard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard configData]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard creatWordKeyBoard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard keyboardWillShow:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard keyboardWillHide:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard layoutSubviews]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard buttonOKAction:forEvent:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard buttonRepeatAction:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard buttonOKSingle:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard buttonOKRepeat:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard wordKey:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard changeLetter]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard wordShiftPressed:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard altPressed:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard changeCharacter]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard characterKey:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard characterShiftPressed:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard deletePressed:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard deletedLongPress:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard longPressAction_timer:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard finishPressed:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard spacingPressed:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard randomLettersWithLetters:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard touchesBegan:withEvent:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard touchesMoved:withEvent:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard touchesEnded:withEvent:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard characterTouchAction:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard playAudio]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard putCharacter:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard delLastChar]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard clearChar]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard syncKernelInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard hostTextField]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard openKeyBoardAudio]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard keyBoardAudioID]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard customKeyBoardAudioPath]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard BP_returnKeyType]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard maskString]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard keyBoardBackgroundImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard pKeyboardGuard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard btnsArr]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard currentNums]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard framesDic]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard characterKeys]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard wordKeys]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard otherKeys]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard finishedKeys]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard characterKeyBoard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard wordKeyBoard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard realVauleString]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard realStringCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSafeWordKeyBoard deletedTimer]", 0)}, 0);
setTimeout(function(){hookObjC("-[XISpeexCodec encode:]", 1)}, 0);
setTimeout(function(){hookObjC("-[XISpeexCodec decode:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapInitRequestReformer baseURL]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationReachability sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationReachability currentNetworkType]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationReachability startNotifier]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationReachability stopNotifier]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationReachability localConnectionChanged]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationReachability currentConnectionFlags]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationReachability reachabilityFlags]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapURLNaviSearchComponent sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapURLNaviSearchComponent userAgent]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapURLRouteSearchComponent sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapURLRouteSearchComponent userAgent]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapURLPOISearchComponent sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapURLPOISearchComponent userAgent]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapURLAroundSearchComponent sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapURLAroundSearchComponent userAgent]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationServiceProvider sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationServiceProvider authServerAddress]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationServiceProvider statisticsServerAddress]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationServiceProvider manifestServerAddress]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationServiceProvider logsServerAddress]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRESTRequestReformer reformParameters:result:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapAuthData publicData]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapAuthData normalData]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapAuthData encryptedData]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapAuthData appendPublicData:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAuthData appendPublicDataArray:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAuthData appendNormalData:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAuthData appendNormalDataArray:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAuthData appendEncryptedData:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAuthData appendEncryptedDataArray:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAuthData encryptWithRowData:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAuthData reserveData]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapLogManager sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLogManager log:logType:file:line:function:format:]", 6)}, 0);
setTimeout(function(){hookObjC("-[AMapLogManager titleForLogType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLogManager enableForLogType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLogManager enabledLogType]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLogManager colorsEnabled]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapURLSearch openAMapRouteSearch:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapURLSearch openAMapPOISearch:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapURLSearch encodedStringWithValue:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapURLSearch canOpenAMAPScheme]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapURLSearch applicationName]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapURLSearch applicationScheme]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRequestReformer baseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRequestReformer postData]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRequestReformer URLPath]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRequestReformer reformParameters:result:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapRequestReformer requestWithReformer:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapRequestReformer cachePolicy]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRequestReformer enableHTTPS]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRequestReformer additionalParameters]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRequestReformer HTTPHeaders]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapCacheFileManager cacheItem:withFileName:atPath:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapCacheFileManager cachedItemsAtPath:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapCacheFileManager cachedItemsCountAtPath:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapCacheFileManager cacheItemWithFileName:atPath:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapCacheFileManager removeItemWithName:atPath:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapCacheFileManager removeAllItemsAtPath:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapCacheFileManager filePathWithName:atPath:withDirectoryCreate:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapCacheFileManager rootDirectory]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapCacheFileManager basePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationCompression GZipInflateWithSource:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationCompression GZipDeflateWithSource:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapManifest typeStringWithType:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapManifest manifestReformerWithAction:type:parameters:product:]", 4)}, 0);
setTimeout(function(){hookObjC("+[AMapManifest resultWithResponseData:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapManifest performManifestRequestWithType:product:completionBlock:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapManifest performManifestRequestWithAction:opType:parameters:product:completionBlock:]", 5)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive unzipFileAtPath:toDestination:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive unzipFileAtPath:toDestination:overwrite:password:error:]", 5)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive unzipFileAtPath:toDestination:delegate:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive unzipFileAtPath:toDestination:overwrite:password:error:delegate:]", 6)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive unzipFileAtPath:toDestination:overwrite:password:progressHandler:completionHandler:]", 6)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive unzipFileAtPath:toDestination:progressHandler:completionHandler:]", 4)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive unzipFileAtPath:toDestination:overwrite:password:error:delegate:progressHandler:completionHandler:]", 8)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive createZipFileAtPath:withFilesAtPaths:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive createZipFileAtPath:withContentsOfDirectory:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive createZipFileAtPath:withContentsOfDirectory:keepParentDirectory:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive createZipFileAtPath:withFilesAtPaths:withPassword:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive createZipFileAtPath:withContentsOfDirectory:withPassword:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive createZipFileAtPath:withContentsOfDirectory:keepParentDirectory:withPassword:]", 4)}, 0);
setTimeout(function(){hookObjC("-[AMapZipArchive zipInfo:setDate:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapZipArchive writeFolderAtPath:withFolderName:withPassword:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapZipArchive writeFile:withPassword:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapZipArchive writeFileAtPath:withFileName:withPassword:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapZipArchive writeData:filename:withPassword:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapZipArchive _temporaryPathForDiscardableFile]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapAuthRequestReformer baseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsRequestReformer baseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsRequestReformer postData]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsRequestReformer signvalueWithData:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsRequestReformer sKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsRequestReformer pData]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapAnalyticsManager sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager registerProductWithComponent:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager registerProductWithComponentWithoutManifestRequest:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager logEvent:params:component:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager logError:errorInfo:component:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager logCrash:crashInfo:component:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager uploadLogWithType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager uploadDataWithType:logArray:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager registerProductCrashInfoFilterWithComponent:forKey:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager requestManifestWithComponent:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager saveLogServerStateWithResponseData:component:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager saveExceptionStateWithFlag:component:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager saveEventStateWithFlag:component:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager nameWithLogType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager crashComponentWithCrashInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager logsWithType:completionHandler:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager clearAllLogs]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapAnalyticsManager clearLogWithType:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationAES encryptUsingECBModeForData:key:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationAES encryptUsingCBCModeForData:key:iv:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationAES encryptLocationUploadData:key:iv:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationAES decryptLocationUploadData:key:iv:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationAES encryptData:crypt:useECBMode:key:keyLength:iv:]", 6)}, 0);
setTimeout(function(){hookObjC("+[AMapResourceReader sharedResourceReader]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapResourceReader imageCache]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapResourceReader bundleInvalidNotification:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapResourceReader bundleWithName:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapResourceReader embeddedImageWithSourceString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapResourceReader publicKeyData]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapResourceReader httpsCertificateData]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapResourceReader sigPublicKeyData]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapResourceReader mapLogoImage]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapResourceReader HUDLogoImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapResourceReader registerBundleWithPath:bundleName:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapResourceReader imageNamed:inBundle:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapResourceReader imageNamed:type:inBundle:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapResourceReader httpsCertificateString]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapResourceReader publicKeyString]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapResourceReader sigPublicKeyString]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapResourceReader mapLogoString]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapResourceReader HUDLogoString]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapServices sharedServices]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapServices onNetworkTypeChanged:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapServices uploadAnalyticsInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapServices apiKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapServices enableHTTPS]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapServices crashReportEnabled]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapServices authorizationStatus]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapServices authorizationInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapServices analyticsEnabled]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapServices lastUploadDatetime]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapServices validatingAPIKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapServices sendInitInfoWithComponent:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapServices registerWithComponent:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapServices registerWithComponent:authKeys:params:handler:]", 4)}, 0);
setTimeout(function(){hookObjC("-[AMapServices sendAuthRequestWithComponent:authKeys:handler:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapServices sendAuthRequestWithComponent:authKeys:params:handler:]", 4)}, 0);
setTimeout(function(){hookObjC("-[AMapServices sendStatisticsWithComponent:handler:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapServices patchRequestParams]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapServices commonHTTPHeadersWithComponent:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapServices postRequestHTTPHeadersWithComponent:logVersion:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapServices commonHTTPHeadersWithComponent:logVersion:withXinfo:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapServices publicPostDataWithComponent:logVersion:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationAOSUtility signStringWithParams:signatureParams:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapPostDataRequestReformer postData]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapPostDataRequestReformer authData]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationRSA encryptWithData:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationRSA encryptWithString:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationRSA encryptToString:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationRSA base64forData:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationRSA verifyBytesSHA256withRSA:signature:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapManifestRequestReformer baseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapManifestRequestReformer URLPath]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapNetworkManager defaultManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkManager startOperationWithRequestReformer:completionBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkManager startOperation:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkManager cancelAllOperations]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkManager operationQueue]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapNetworkManager sendSynchronousRequestWithReformer:returningResponse:error:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility joinedStringWithDictionary:separator:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility filteredParamString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility encodeURLParamString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility encodeURLParamDictionary:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility headersForKeyVerificationWithParams:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility urlEncodeForKey:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility urlDecodeForKey:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility encryptForSourceData:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility decryptAESForSourceData:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility assembledURLStringWithAddress:enableHTTPS:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility assembledURLStringWithAddress:enableHTTPS:keepHTTPS:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility encryptForXinfo2:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility encryptForXinfo21:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility encryptForXinfo30:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility appendData:toMutableData:shouldAddZeroLength:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility boolValueWithAuthResponse:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility boolValueWithAuthResponse:forKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility encryptForXinfo:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility createTimestampString]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility sortedStringWithParams:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationUtility writeFileWithData:fileName:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapNetworkStackManager networkStackManagerEntry:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapNetworkStackManager networkStackManagerThread]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapNetworkStackManager defaultManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkStackManager startOperationWithRequestReformer:completionBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkStackManager startOperation:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkStackManager pushOperation:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkStackManager tryPopWaitingStack]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkStackManager pushOperationsToQueue]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkStackManager observeValueForKeyPath:ofObject:change:context:]", 4)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkStackManager cancelAllOperations]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkStackManager operationQueue]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkStackManager waitingStack]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkStackManager runloopModes]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapDownloadRequestReformer HTTPHeaders]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapDownloadRequestReformer userAgent]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapDownloadRequestReformer urlString]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapDownloadRequestReformer existedDataLength]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNaviConfig appScheme]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNaviConfig appName]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRouteConfig appScheme]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRouteConfig appName]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRouteConfig startCoordinate]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRouteConfig destinationCoordinate]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRouteConfig drivingStrategy]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRouteConfig transitStrategy]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapRouteConfig routeType]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapPOIConfig appScheme]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapPOIConfig appName]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationCategoryLoader loadCategories]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapAOSRequestReformer reformParameters:result:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapAOSRequestReformer signParameters]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapAnalyticsLogProvider errorLogWithType:name:detail:component:]", 4)}, 0);
setTimeout(function(){hookObjC("+[AMapAnalyticsLogProvider eventLogWithID:params:component:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapAnalyticsLogProvider eventLogWithLogs:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapAnalyticsLogProvider errorLogHeader]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapAnalyticsLogProvider logStringWithDictionary:encrypted:appendComma:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapFoundationComponent sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationComponent userAgent]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationComponent crashfilterArray]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapStatistics sharedStatistics]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapStatistics fetchSSIDInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapStatistics currentDeviceModel]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapStatistics infoStringWithKeys:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapStatistics infoDictionaryWithKeys:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapStatistics xinfo_21]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapStatistics platinfoWithProduct:version:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapStatistics tryToRestoreUTDIDValue]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapStatistics tryToGetIDFAString]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapStatistics keyAuthorized]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapStatistics keyChainManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapStatistics telephonyInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationKeychainManager objectForKey:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationKeychainManager removeObjectForKey:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationKeychainManager synchronizationMode]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapFoundationKeychainManager accessibilityType]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapNetworkOperation networkRequestThreadEntryPoint:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapNetworkOperation networkRequestThread]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation cancelConnection]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation startConnection]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation invokeCompletionBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation outputStream]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation connection:didReceiveResponse:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation connection:didReceiveData:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation connectionDidFinishLoading:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation connection:didFailWithError:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation responseData]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation completionQueue]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation runLoopModes]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation downloadProgress]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation completionHandler]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation backgroundTaskCleanup]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapNetworkOperation totalBytesRead]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationSerialComponent sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSerialComponent userAgent]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadInfoOld encodeWithCoder:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchBaseRequest customID]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationDistrictRequest requireExtension]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationPOIKeywordsRequest poiType]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationPOIAroundRequest poiType]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUploadDataProvider logDataWithInfo:component:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUploadDataProvider uploadDataWithInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationReGeocode AMapLocReGeocodeClassMap]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationReGeocode formattedAddress]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationReGeocode encodeWithCoder:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationReGeocode POIName]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationReGeocode AOIName]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationPoint locationWithLatitude:longitude:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationPoint encodeWithCoder:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationPoint coordinateString]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceRegion containsCoordinate:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceRegion distanceFromPointToBoundary:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceRegion startStayedTimer]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceRegion stopStayedTimer]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceRegion handleWhenStayedTimerFired:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceRegion customID]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceRegion fenceStatus]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceRegion fenceStatusToStayedTimer]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceCircleRegion containsCoordinate:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceCircleRegion distanceFromPointToBoundary:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFencePolygonRegion buildPolygnRegionWithCount:coordinates:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFencePolygonRegion containsCoordinate:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFencePolygonRegion distanceFromPointToBoundary:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFencePolygonRegion northEast]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFencePolygonRegion southWest]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFencePOIRegion POIItem]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceDistrictRegion buildDistrictRegionWithDistrictName:districtItem:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceDistrictRegion containsLocationPoint:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceDistrictRegion polylinePoints]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceDistrictRegion containsCoordinate:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceDistrictRegion distanceFromPointToBoundary:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceDistrictRegion districtItem]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceDistrictRegion arealocationDics]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager startRegionCLManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager stopRegionCLManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager pausesLocationUpdatesAutomatically]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager allowsBackgroundLocationUpdates]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager addCircleRegionForMonitoringWithCenter:radius:customID:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager addPolygonRegionForMonitoringWithCoordinates:count:customID:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager addDistrictRegionForMonitoringWithDistrictName:customID:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager geoFenceRegionsWithCustomID:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager removeTheGeoFenceRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager removeGeoFenceRegionsWithCustomID:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager removeAllGeoFenceRegions]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager locationSearchRequest:didFailWithError:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager onPOIKeywordsSearchDone:result:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager onPOIAroundSearchDone:result:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager onDistrictSearchDone:result:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager createPOIOrDistrictRegionsWithRequest:searchResult:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager errorWithErrorCode:info:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager startMonitoringForRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager addRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager removeRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager removeAllMonitoringRegions]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager processMonitoringRegionsWithLocation:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager sameFenceRegionWithRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager amapLocationManager:didUpdateLocation:reGeocode:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager amapLocationManager:didFailWithError:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager amapLocationManager:didChangeAuthorizationStatus:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager amapGeoFenceRegionStatusDidChangedToStayed:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager stopAndExitAllCLM]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager monitoringGeoFenceRegionWithCustomID:block:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager activeAction]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager regionHandlingQueue]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager searchManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager regionLocationManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager monitoringRegions]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager regionIdentifiers]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapGeoFenceManager latestLocation]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationReGeocodeReformer baseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationReGeocodeReformer URLPath]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUtility buildPOIWithData:error:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUtility buildDistrictWithData:error:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUtility buildReGeocodeWithData:error:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUtility buildUploadInfoWithData:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUtility errorWithURLError:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUtility errorWithErrorCode:externDescription:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUtility errorDescriptionWithErrorCode:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUtility requestLocationAuthorizationIfNeedWithLocationManager:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRegion coordinateInCircumscribedRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRegion containsCoordinate:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRegion regionCenter]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRegion regionRadius]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRegion notifyOnEntry]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRegion notifyOnExit]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRegion locationRegionState]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationCircleRegion containsCoordinate:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationCircleRegion coordinateInCircumscribedRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationPolygonRegion buildPolygnRegionWithCount:coordinates:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationPolygonRegion containsCoordinate:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationPolygonRegion coordinateInCircumscribedRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager cancelAllRequests]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager locationDistrictSearch:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager locationPOIKeywordsSearch:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager locationPOIAroundSearch:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager additionalParameters]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager performDistrictRequestWithReformer:request:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager performPOIKeywordsRequestWithReformer:request:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager performPOIAroundRequestWithReformer:request:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager operationForRequest:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager containsRequest:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager addOperation:forRequest:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager removeOperationForRequest:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager clearAllOperations]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager networkManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSearchManager requestOperationMapping]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationDistrictRequestReformer baseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationDistrictRequestReformer URLPath]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationPOIKeywordsRequestReformer baseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationPOIKeywordsRequestReformer URLPath]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationPOIAroundRequestReformer baseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationPOIAroundRequestReformer URLPath]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationComponent sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationComponent userAgent]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationComponent crashfilterArray]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUploadManagerOld sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManagerOld saveLocationUploadInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManagerOld reachabilityChanged:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManagerOld uploadCacheFileIfNeeded]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManagerOld timerCallback:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManagerOld requestUploadSwitcherStatusComplete:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManagerOld startUploadInfoRequest:complete:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManagerOld fileManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManagerOld lastSwitcherRequestDate]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManagerOld uploadSwitcherInterval]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManagerOld currentTimer]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager existFileCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager fileNameArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager wirteFileWithMemonyObjects:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager cacheUploadInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager deleteFileWithFileName:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager deleteAllFiles]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager appDidEnterBackground]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager cacheOfflineReGeocode:hashKey:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager writeData:fileName:complete:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager cacheFilePathWithFloderName:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager cacheFilesWithFloderName:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager deleteLocalFileWithFileName:floderName:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager deleteLocalFloder:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager cacheFilesWithFloderName:containsString:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager cacheFilesWithFloderName:beginString:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager cacheFilesWithFloderName:likeString:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager fileCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager memoryCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager memonyObjects]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationFileManager memonyDict]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationSingleComponent sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationSingleComponent userAgent]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager stopAndExitAllCLM]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager createLocationManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager startCLMLocating]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager stopCLMLocating]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager startRegionCLManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager stopRegionCLManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager distanceFilter]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager desiredAccuracy]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager locationTimeout]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager reGeocodeTimeout]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager pausesLocationUpdatesAutomatically]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager allowsBackgroundLocationUpdates]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager requestLocationWithReGeocode:completionBlock:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager startUpdatingLocation]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager stopUpdatingLocation]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager monitoredRegions]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager startMonitoringForRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager stopMonitoringForRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager requestStateForRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager requestReGeocodeInfoWithCoordinate:handler:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager sendRegisterInfoForComponent:withLat:lon:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager processLocationRequestsWithLocation:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager handleNeedReGeocodeRequest:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager forceCompleteAllRequestsForLocateError:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager cancelLocationRequest:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager invokeCompletionBlockWithRequest:reGeocode:error:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager locationRequestDidLocateTimedOut:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager locationRequestDidNeedReGeocode:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager locationRequestDidCompleted:withReGeocode:error:]", 3)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager processSerialLocationWithLocation:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager cancelReGeocodeForSerialLocate]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager processMonitoringRegionsWithLocation:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager processLocationInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager locationManager:didFailWithError:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager locationManager:didUpdateLocations:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager locationManager:didChangeAuthorizationStatus:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager locationManagerDidPauseLocationUpdates:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager locationManagerDidResumeLocationUpdates:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager addLocationRequest:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager removeLocationRequest:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager cancelAllLocationRequests]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager cancelAllLocationRequestsInDispatch]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager addRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager removeRegion:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager removeAllMonitoringRegions]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager locatingWithReGeocode]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager networkManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager locationManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager shouldStartLocationTimer]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager locationRequests]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager workStatus]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager latestLocation]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager refreshReGeocodeEnabled]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager refreshReGeocodeRadius]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager needSendRegisterInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager reGeocodeHandlingQueue]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager reGeocodeLocation]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager reGeocodeInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager regionLocationManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager monitoringRegions]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationManager regionIdentifiers]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUploadUtility encodeDataWithArray:header:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUploadUtility dcodeDataWithDate:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationServiceProvider sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationServiceProvider searchServerAddress]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadRequest fileName]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadRequest uploadInfoData]", 0)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationSearchManagerCommom errorWithErrorCode:info:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationSearchManagerCommom errorCodeWithServerInfoCode:]", 1)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationSearchManagerCommom reducer_RDP:threshHold:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationSearchManagerCommom calculateDistanceFromPoint:toLine:and:]", 3)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationSearchManagerCommom buildDistrictItemWithData:error:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationSearchManagerCommom buildPOISearchItemWithData:error:]", 2)}, 0);
setTimeout(function(){hookObjC("+[AMapLocationUploadManager sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager registerNotificationObservers]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager cacheLocation:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager writeLocationInfoArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager clearCacheLogs]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager deleteOldestFile]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager uploadCacheFileIfNeeded]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager uploadCacheFile]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager shouldUploadForNet]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager shouldUploadForTimespan]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager updateControlWithResponse:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager reachabilityChanged:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager saveLastUploadTimestamp]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager reloadLastUploadTimestamp]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager saveLastUploadAuthConfig]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager reloadLastUploadAuthConfig]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager appDidEnterBackgroundAction]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadManager lastUploadTimestamp]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadRequestReformer postData]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadRequestReformer commonHTTPHeaders]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadRequestReformer baseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationUploadSwitchRequestReformer baseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRequest startLocationTimeoutTimerIfNeeded]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRequest finishReGeocode:error:]", 2)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRequest forceTimedOutWithLocateError:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRequest locationTimeoutTimerFired:]", 1)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRequest stopLocationTimeoutTimer]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRequest locateError]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRequest locationTimeout]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRequest needReGeocode]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRequest desiredAccuracy]", 0)}, 0);
setTimeout(function(){hookObjC("-[AMapLocationRequest locationTimeoutTimer]", 0)}, 0);
setTimeout(function(){hookObjC("+[OMCCFingerprintSDK sharedSDK]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK configureDeviceId:]", 1)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK configureSDKEnvironment:]", 1)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK queryAuthenticatorStatusWithOperatorNo:loginName:loginToken:locInfo:operaCity:appType:queryType:authPayChannel:success:failure:]", 10)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK registerWithOperatorNo:loginName:loginToken:locInfo:operaCity:appType:payToken:authPayChannel:success:failure:]", 10)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK registerWithReason:operatorNo:loginName:loginToken:locInfo:operaCity:appType:payToken:authPayChannel:success:failure:]", 11)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK authWithOperatorNo:loginName:loginToken:locInfo:operaCity:appType:authUseType:authPayChannel:signInfo:success:failure:]", 11)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK authWithReason:fallbackTitle:operatorNo:loginName:loginToken:locInfo:operaCity:appType:authUseType:authPayChannel:signInfo:success:failure:]", 13)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK deregisterWithOperatorNo:loginName:loginToken:locInfo:operaCity:appType:authPayChannel:success:failure:]", 9)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK checkWithOperatorNo:loginName:loginToken:locInfo:operaCity:appType:authPayChannel:success:failure:]", 9)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK updateWithUAFRequest:success:failure:]", 3)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK authTouchIDLoginWithLoginName:operatorNo:authPayChannel:signInfo:success:failure:]", 6)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK authForLoginWithReason:fallbackTitle:loginName:operatorNo:authPayChannel:signInfo:success:failure:]", 8)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK reqQueryAuthenticatorStatusWithOperatorNo:loginName:loginToken:locInfo:operaCity:appType:queryType:platformNo:pdNo:authPayChannel:success:failure:]", 12)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK reqGetFidoUAFRequestWithOperatorNo:loginName:loginToken:locInfo:operaCity:appType:authType:authPayChannel:authUseType:success:failure:]", 11)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK reqRegisterWithOperatorNo:loginName:loginToken:locInfo:operaCity:appType:platformNo:payToken:fidoResponse:authType:authPayChannel:operType:success:failure:]", 14)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK reqDeregisterWithOperatorNo:loginName:loginToken:locInfo:operaCity:appType:authType:authPayChannel:success:failure:]", 10)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK reqAuthWithOperator:loginName:loginToken:locInfo:operaCity:appType:platformNo:pdNo:fidoResponse:authType:authPayChannel:signInfo:success:failure:]", 14)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK reqApplyTempLoginTokenWithLoginName:authType:authPayChannel:capture:signInfo:platformNo:pdNo:success:failure:]", 9)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK reqValidTempLoginTokenWithLoginName:authType:authPayChannel:tempLoginToken:platformNo:success:failure:]", 7)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK callFidoForRegisterWithUAFRequest:success:failure:]", 3)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK callFidoForRegisterWithReason:UAFRequest:success:failure:]", 4)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK callFidoForAuthWithUAFRequest:success:failure:]", 3)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK callFidoForAuthWithReason:fallbackTitle:UAFRequest:success:failure:]", 5)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK callFidoForDeregisterWithUAFRequest:success:failure:]", 3)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK callFidoForCheckPolicyWithUAFRequest:success:failure:]", 3)}, 0);
setTimeout(function(){hookObjC("-[OMCCFingerprintSDK callFidoForUpdateWithUAFRequest:success:failure:]", 3)}, 0);
setTimeout(function(){hookObjC("+[OMCCRequestManager sharedManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCRequestManager staticParams]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCRequestManager dynamicParams]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCRequestManager post:parameters:loginToken:success:failure:]", 5)}, 0);
setTimeout(function(){hookObjC("-[OMCCRequestManager mapiPost:parameters:loginToken:success:failure:]", 5)}, 0);
setTimeout(function(){hookObjC("+[OMCCRequestManager networkErrorWithDomain:error:]", 2)}, 0);
setTimeout(function(){hookObjC("-[OMCCRequestManager mapiServerUrl]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCRequestManager deviceId]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCRequestResponse errorWithDomain:]", 1)}, 0);
setTimeout(function(){hookObjC("-[OMCCRequestResponse errorMsg]", 0)}, 0);
setTimeout(function(){hookObjC("-[OMCCRequestResponse errorCode]", 0)}, 0);
setTimeout(function(){hookObjC("+[FidoManager callFidoWithUAFRequest:opType:errorDomain:success:failure:]", 5)}, 0);
setTimeout(function(){hookObjC("+[FidoManager regisetrWithUAFRequest:success:failure:]", 3)}, 0);
setTimeout(function(){hookObjC("+[FidoManager regisetrWithReason:UAFRequest:success:failure:]", 4)}, 0);
setTimeout(function(){hookObjC("+[FidoManager authWithUAFRequest:success:failure:]", 3)}, 0);
setTimeout(function(){hookObjC("+[FidoManager authWithReason:fallbackTitle:UAFRequest:success:failure:]", 5)}, 0);
setTimeout(function(){hookObjC("+[FidoManager deregisetrWithUAFRequest:success:failure:]", 3)}, 0);
setTimeout(function(){hookObjC("+[FidoManager checkPolicyWithUAFRequest:success:failure:]", 3)}, 0);
setTimeout(function(){hookObjC("+[FidoManager updateWithUAFRequest:success:failure:]", 3)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_asm_db gmrz_jv_asm_DBin:counterIn:DB_dataIn:]", 3)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_asm_db gmrz_jv_asm_DB_Query:counterIn:DB_dataIn:]", 3)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_asm_db gmrz_jv_asm_DB_Delete:counterIn:]", 2)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_asm_db keychainErrorToString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_json_pkg gmrz_pkg_authjson_client2asm:username:Jsonout:dicOut:]", 4)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal generateKeyPair:]", 1)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal keychainErrorToString:]", 1)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal deleteAsymmetricKeys]", 0)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal verifySignature:secKeyRef:signature:]", 3)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal deleteSymmetricKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal generateSymmetricKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal aes256_encrypt_ext:SourceData:SourceDataLength:dstData:dstDataLength:]", 5)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal aes256_decrypt:SourceData:]", 2)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal deleteKeyAsync:]", 1)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal generateKeyAsync:pubId:]", 2)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal useKeyAsyncSign:pubId:digestData:digestLength:signature:signatureLength:]", 6)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal useKeyAsyncVerify:pubId:digestData:digestLength:signature:signatureLength:]", 6)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal deleteKeyAsync:pubId:]", 2)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal symmetricKeyRef]", 0)}, 0);
setTimeout(function(){hookObjC("-[tanchu _pBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[authticatorlistshow _pBlock]", 0)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_ecc_cal_ext sharedManager]", 0)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_ecc_cal_ext allocWithZone:]", 1)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext generateKeyAsync:pubId:serviceId:accountId:]", 4)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext generateKeyAsync_ios9:pubId:publickeybyte:]", 3)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext useKeyAsyncSign:pubId:trancationtext:serviceId:accountId:digestData:digestLength:signature:signatureLength:method:]", 10)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext useKeyAsyncVerify:pubId:digestData:digestLength:signature:signatureLength:]", 6)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext deleteKeyAsync:pubId:serviceId:accountId:]", 4)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext deleteKeyAsync_ios9:pubId:]", 2)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext deleteSymmetricKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext generateSymmetricKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext aes256_encrypt:SourceData:]", 2)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext aes256_encrypt_ext:SourceDataLength:dstData:dstDataLength:]", 4)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext aes256_decrypt:SourceData:]", 2)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext aes256_decrypt_ext:SourceDataLength:dstData:dstDataLength:]", 4)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext symmetricKeyRef]", 0)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_ecc_cal_ext mConditionLock]", 0)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface UpdateNewFPS:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface process:DoFido:FidoOut:]", 3)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface changeToobtain:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface checkFingerState]", 0)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface Checkifreg:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface checkifdisallow:Fidoin:]", 2)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface checkifaccepted:Fidoin:]", 2)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface checkifmutiuser:username:aaid:keyid:]", 4)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface checkifderegjsoninvalid:authticatorlist:]", 2)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface checkifderegjsoninvalid:asmdbItem:]", 2)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface Deregfunction:statuscode:]", 2)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface regfunctionext:statuscode:]", 2)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface authfunctionext:username:aaid:keyid:statuscode:]", 5)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface authfunction:aaid:keyid:statuscode:]", 4)}, 0);
setTimeout(function(){hookObjC("+[gmrz_client_interface deleteKeypair:username:serviceid:keyid:]", 4)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func base64StringFromText:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func textFromBase64String:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func textFromBase64StringExt:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func dataWithBase64EncodedString:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func base64EncodedStringFrom:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func base64urlconv:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func convbase64url:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func checkifUVSchange:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func canEvaluatePolicy:]", 1)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func db_items_match:Itemjson:]", 2)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func db_items_delete:FuncItemIndex:]", 2)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func asmDB_data_id:counterid:username:ext:]", 4)}, 0);
setTimeout(function(){hookObjC("+[gmrz_jv_util_func checkUVSChangeWithServiceID:keyid:]", 2)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_asm_regeister appID]", 0)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_asm_regeister userName]", 0)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_asm_regeister finalChallenge]", 0)}, 0);
setTimeout(function(){hookObjC("-[gmrz_jv_asm_regeister attestationType]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD handleGraceTimer:]", 1)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD didMoveToSuperview]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD animationFinished:finished:context:]", 3)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD launchExecution]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD updateIndicators]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD layoutSubviews]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD registerForKVO]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD unregisterFromKVO]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD observableKeypaths]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD observeValueForKeyPath:ofObject:change:context:]", 4)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD registerForNotifications]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD unregisterFromNotifications]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD statusBarOrientationDidChange:]", 1)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD animationType]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD xOffset]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD yOffset]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD dimBackground]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD graceTimer]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD taskInProgress]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD labelText]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD completionBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBProgressHUD cornerRadius]", 0)}, 0);
setTimeout(function(){hookObjC("+[CCBNetPay defaultService]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBNetPay currentVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBNetPay payOrder:callback:]", 2)}, 0);
setTimeout(function(){hookObjC("-[CCBNetPay payAppOrder:callback:]", 2)}, 0);
setTimeout(function(){hookObjC("-[CCBNetPay processOrderWithPaymentResult:standbyCallback:]", 2)}, 0);
setTimeout(function(){hookObjC("-[CCBNetPay turnDictWithUrl:]", 1)}, 0);
setTimeout(function(){hookObjC("-[CCBNetPay payUrlOrder:callback:]", 2)}, 0);
setTimeout(function(){hookObjC("-[CCBNetPay appCompletionBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBNetPay webCompletionBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[CCBNetPay dictInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK checkNecessaryParams]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK startFunction]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK openCommonH5]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK openCommonCookie]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK openCommonClient]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK openEmail]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK fromController]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK userId]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK apiKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK taskType]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK quitOnLoginDone]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK quitOnFail]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK cacheDisable]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK quitDisable]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK agreementUrl]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK agreementEntryText]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK edgesForExtendedLayout]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK backImageName]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK refreshImageName]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK imagePath]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK userBaseInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK loginVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK loginCustom]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK carrier_phone]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK carrier_password]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK carrier_name]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK carrier_idcard]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK carrier_editable]", 0)}, 0);
setTimeout(function(){hookObjC("-[MoxieSDK customAPI]", 0)}, 0);
setTimeout(function(){hookObjC("+[MXLocationService shareLocation]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXLocationService startLocating]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXLocationService locationManager:didUpdateLocations:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MXLocationService reverseGeocode:longitude:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MXLocationService resultBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXLocationService locationManager]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService startCollecting]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService generateMXUA]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService deviceString]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService currentLanguage]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService collectLocation]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService collectNetworking]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxUUIDStr]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxModel]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxDeviceString]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxOSType]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxOSVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxSystem_User_agent]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxPhoneName]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxBundleIdentifier]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxAppName]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxAppVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxAppBuild]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxSDKVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxUser_agent]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxIPStr]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxPhoneNo]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService NetworkDes]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxLatitude]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxLongitude]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxCurProvince]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXCollectService mxCurCity]", 0)}, 0);
setTimeout(function(){hookObjC("+[MXAPIService requestForListInfo:finish:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXAPIService requestForCreateTask:taskInfo:finish:]", 3)}, 0);
setTimeout(function(){hookObjC("+[MXAPIService requestForAskingStatus:taskid:finish:]", 3)}, 0);
setTimeout(function(){hookObjC("+[MXAPIService requestForUploadFiles:fileList:taskid:finish:]", 4)}, 0);
setTimeout(function(){hookObjC("+[MXAPIService uploadTaskTrackInfo:finish:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXAPIService requestForUploadCrashReport:params:finish:]", 3)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager createTask]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager addSuccItem:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager uploadFiles]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager startPolling]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager callbackProcessInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager finishTask]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager callbackResult]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager moxieSDK]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager taskType]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager userAgent]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager enableCraw]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager taskInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager curAccountInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager curCookiesStr]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager curProcess]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager curTasktracer]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager hasCreateTask]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager hasUploaded]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager canLeave]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager curCode]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager curTaskID]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager curDes]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager curPercent]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager curPollData]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager curPollPhaseStatus]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskManager curFileList]", 0)}, 0);
setTimeout(function(){hookObjC("+[MXRegex match:pattern:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXRegex filter:pattern:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive unzipFileAtPath:toDestination:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive unzipFileAtPath:toDestination:overwrite:password:error:]", 5)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive unzipFileAtPath:toDestination:delegate:]", 3)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive unzipFileAtPath:toDestination:overwrite:password:error:delegate:]", 6)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive unzipFileAtPath:toDestination:overwrite:password:progressHandler:completionHandler:]", 6)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive unzipFileAtPath:toDestination:progressHandler:completionHandler:]", 4)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive unzipFileAtPath:toDestination:preserveAttributes:overwrite:password:error:delegate:]", 7)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive unzipFileAtPath:toDestination:preserveAttributes:overwrite:password:error:delegate:progressHandler:completionHandler:]", 9)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive createZipFileAtPath:withFilesAtPaths:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive createZipFileAtPath:withContentsOfDirectory:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive createZipFileAtPath:withContentsOfDirectory:keepParentDirectory:]", 3)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive createZipFileAtPath:withFilesAtPaths:withPassword:]", 3)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive createZipFileAtPath:withContentsOfDirectory:withPassword:]", 3)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive createZipFileAtPath:withContentsOfDirectory:keepParentDirectory:withPassword:]", 4)}, 0);
setTimeout(function(){hookObjC("-[MXZipArchive zipInfo:setDate:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MXZipArchive writeFolderAtPath:withFolderName:withPassword:]", 3)}, 0);
setTimeout(function(){hookObjC("-[MXZipArchive writeFile:withPassword:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MXZipArchive writeFileAtPath:withFileName:withPassword:]", 3)}, 0);
setTimeout(function(){hookObjC("-[MXZipArchive writeData:filename:withPassword:]", 3)}, 0);
setTimeout(function(){hookObjC("+[MXZipArchive _temporaryPathForDiscardableFile]", 0)}, 0);
setTimeout(function(){hookObjC("+[MXCrashCatch checkErrorLog]", 0)}, 0);
setTimeout(function(){hookObjC("+[MXCrashCatch simulateCrashType:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MXAccountInfo secondPwd]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSite bankId]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSite bankName]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSite area_code]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSite city_name]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSite pinyin_name]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSite pinyin_name_l]", 0)}, 0);
setTimeout(function(){hookObjC("+[MXReachability reachabilityWithHostName:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MXReachability reachabilityWithHostname:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MXReachability reachabilityWithAddress:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MXReachability reachabilityForInternetConnection]", 0)}, 0);
setTimeout(function(){hookObjC("+[MXReachability reachabilityForLocalWiFi]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability startNotifier]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability stopNotifier]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability connectionRequired]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability currentReachabilityStatus]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability reachabilityFlags]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability currentReachabilityString]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability currentReachabilityFlags]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability reachabilityChanged:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MXReachability reachableBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability unreachableBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability reachabilityBlock]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability reachableOnWWAN]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability reachabilityRef]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability reachabilitySerialQueue]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXReachability reachabilityObject]", 0)}, 0);
setTimeout(function(){hookObjC("+[MXTaskHelper callbackResultWithMoxieSDK:code:taskType:taskid:message:account:loginDone:]", 7)}, 0);
setTimeout(function(){hookObjC("+[MXTaskHelper clearCustomLogin:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MXSiteItems loginUrl]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSiteItems loginUrlV3]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSiteItems userAgent]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSiteItems subType]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSiteItems preLoadJS]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSiteItems preLoadDelay]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSiteItems preLoadTimes]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXSiteItems insuranceName]", 0)}, 0);
setTimeout(function(){hookObjC("+[MXRSA stripPublicKeyHeader:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MXRSA stripPrivateKeyHeader:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MXRSA addPublicKey:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MXRSA addPrivateKey:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MXRSA encryptData:withKeyRef:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXRSA encryptString:privateKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXRSA encryptData:privateKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXRSA decryptData:withKeyRef:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXRSA decryptString:privateKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXRSA decryptData:privateKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXRSA encryptString:publicKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXRSA encryptData:publicKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXRSA decryptString:publicKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXRSA decryptData:publicKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[GIKeychain addKeychainData:forKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[GIKeychain addShareKeyChainData:forKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[GIKeychain deleteKeychainDataForKey:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MXHttpHeader commonHeaders:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MXTaskTracer addTaskTrackInfo:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MXTaskTracer uploadAll]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskTracer TrackInfoArray]", 0)}, 0);
setTimeout(function(){hookObjC("+[MXEncrypt md5:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MXEncrypt aes128_encryptData:withKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXEncrypt aes128_decryptData:withKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXEncrypt aes128_encryptStr:withKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXEncrypt aes128_decryptStr:withKey:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXEncrypt bytesToLongs:ofLength:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXEncrypt longsToBytes:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MXEncrypt TEAencrypt:withPassword:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MXEncrypt TEAdecrypt:withPassword:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MXWorkerTask successUrlRegex]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskTrackInfo sysName]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskTrackInfo taskId]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskTrackInfo phaseStatus]", 0)}, 0);
setTimeout(function(){hookObjC("-[MXTaskTrackInfo errorCode]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPUIKitHelper bundleName]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPUIKitHelper bundlePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPUIKitHelper filePathWithName:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPUIKitHelper imageWithName:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPTextField bp_placeholderText]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPTextField canPerformAction:withSender:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPTextField resignFirstResponder]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPTextField bp_noAction]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPTextField bp_alwaysShowKeyboard]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPSegmentedControl segmentItemSelected:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPActionSheetPicker label:loadFromItem:]", 2)}, 0);
setTimeout(function(){hookObjC("-[BPActionSheetPicker labelAddLine:]", 1)}, 0);
setTimeout(function(){hookObjC("-[BPActionSheetPicker gestureSelector:]", 1)}, 0);
setTimeout(function(){hookObjC("+[BPActionSheetPicker pickerWithTitleItem:cancelItem:optionItemArray:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPActionSheetPicker pickerWithTitleItem:cancelItem:optionItems:]", 3)}, 0);
setTimeout(function(){hookObjC("-[BPActionSheetPicker cancelItem]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPActionSheetPicker normalItemArray]", 0)}, 0);
setTimeout(function(){hookObjC("+[BPActionSheetPicker defaultPickerWithTitle:optionItems:]", 2)}, 0);
setTimeout(function(){hookObjC("+[BPActionSheetPicker defaultPickerWithTitle:cancelText:optionItems:]", 3)}, 0);
setTimeout(function(){hookObjC("+[BPDatePicker datePicker]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPDatePicker IDCardDateModeEnable]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPDatePicker confirmAction]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPDatePicker cancelAction]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPDatePicker otherAction]", 0)}, 0);
setTimeout(function(){hookObjC("-[BPProgressHUD popGestureRecognizerEnabled]", 0)}, 0);
setTimeout(function(){hookObjC("+[FormPageManager pageDone:]", 1)}, 0);
setTimeout(function(){hookObjC("-[CardMainPhoto newBitmapRGBA8ContextFromImage:]", 1)}, 0);
setTimeout(function(){hookObjC("-[CardMainPhoto pixelBufferFromCGImage:]", 1)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo toString]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo frontFullImg]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo backFullImg]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo frontShadow]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo backShadow]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo faceImg]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo nameImg]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo nameImgPadding]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo sexImg]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo nationImg]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo addressImg]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo codeImg]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo codeImgPadding]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardInfo validImg]", 0)}, 0);
setTimeout(function(){hookObjC("+[EXOCRIDCardRecoManager sharedManager:]", 1)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardRecoManager controlTabBarControllerHiddenBySDK:]", 1)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardRecoManager controlNavigationrControllerHiddenBySDK:]", 1)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardRecoManager recoIDCardFromStreamWithSide:OnCompleted:OnCanceled:OnFailed:]", 4)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardRecoManager recoIDCardFromStillImage:OnCompleted:OnFailed:]", 3)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardRecoManager pauseRecoWithStopStream:]", 1)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardRecoManager continueRecoWithSide:]", 1)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardRecoManager rootVC]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardRecoManager bHasNavi]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardRecoManager idVc]", 0)}, 0);
setTimeout(function(){hookObjC("-[EXOCRIDCardRecoManager bByPresent]", 0)}, 0);
setTimeout(function(){hookObjC("-[IDPhoto doRec:OnCompleted:OnFailed:]", 3)}, 0);
setTimeout(function(){hookObjC("-[IDPhoto photoReco:OnCompleted:OnFailed:]", 3)}, 0);
setTimeout(function(){hookObjC("-[IDPhoto photoReco]", 0)}, 0);
setTimeout(function(){hookObjC("-[IDPhoto openPhoto]", 0)}, 0);
setTimeout(function(){hookObjC("-[IDPhoto doRec:]", 1)}, 0);
setTimeout(function(){hookObjC("-[IDPhoto imagePickerController:didFinishPickingMediaWithInfo:]", 2)}, 0);
setTimeout(function(){hookObjC("-[IDPhoto imagePickerControllerDidCancel:]", 1)}, 0);
setTimeout(function(){hookObjC("+[EXOCRCardEngineManager finishEngine]", 0)}, 0);
setTimeout(function(){hookObjC("+[IDCardConfig shouldEnableDoubleCheck]", 0)}, 0);
setTimeout(function(){hookObjC("+[CardEngineManager finishEngine]", 0)}, 0);
setTimeout(function(){hookObjC("+[CardEngineManager hasInit]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAViewRecycler removeAllViews]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAViewRecycler reduceMemoryUsage]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAViewRecycler reuseIdentifiersToRecycledViews]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAPolygonRenderer referenceDidChange]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAPolygonRenderer glRender]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMultiPoint calculateBoundingMapRect]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMultiPoint pointCount]", 0)}, 0);
setTimeout(function(){hookObjC("+[MACoreDataGridList sharedGridlist]", 0)}, 0);
setTimeout(function(){hookObjC("-[MACoreDataGridList removeTileWithTileName:dataSource:index:]", 3)}, 0);
setTimeout(function(){hookObjC("+[MAMapStatus statusWithCenterCoordinate:zoomLevel:rotationDegree:cameraDegree:screenAnchor:]", 5)}, 0);
setTimeout(function(){hookObjC("-[MAMapStatus centerCoordinate]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapStatus zoomLevel]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapStatus rotationDegree]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapStatus cameraDegree]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapStatus screenAnchor]", 0)}, 0);
setTimeout(function(){hookObjC("+[MACachedObject cacheObject:forTile:withCacheKey:]", 3)}, 0);
setTimeout(function(){hookObjC("-[MACachedObject cachedObject]", 0)}, 0);
setTimeout(function(){hookObjC("-[MACachedObject cacheKey]", 0)}, 0);
setTimeout(function(){hookObjC("-[MATraceManager queryProcessedTraceWith:type:processingCallback:finishCallback:failedCallback:]", 5)}, 0);
setTimeout(function(){hookObjC("-[MATraceManager operationQueue]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOfflineProvince encodeWithCoder:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAOfflineProvince citiesForDictionary:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAOfflineProvince updateItemStatus]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOfflineProvince executeInitializationWithDictionary:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAOfflineProvince descriptionDictionary]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAResources imageNamed:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAResources logoImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAResources offlinePackagePath]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAResources coreBasePath]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAResources coreCachePath]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAResources offlineDataPath]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAResources indoorDataPath]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAResources bundle3DPlistData]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAResources tileOverlayCachePath]", 0)}, 0);
setTimeout(function(){hookObjC("+[MAResources sharedResources]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOfflineItemCommonCity itemStatus]", 0)}, 0);
setTimeout(function(){hookObjC("+[MAAnnotationMoveAnimation makeInstanceWith:count:duration:name:completeCallback:]", 5)}, 0);
setTimeout(function(){hookObjC("-[MAAnnotationMoveAnimation triggerCompleteCallback:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAAnnotationMoveAnimation calculateWithCoord:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAAnnotationMoveAnimation step:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAAnnotationMoveAnimation startCoord]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAAnnotationMoveAnimation completeCallback]", 0)}, 0);
setTimeout(function(){hookObjC("-[MATraceLocation mapPoint]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOfflineCity cityCode]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOfflineCity cityName]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOfflineCity urlString]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOfflineCity encodeWithCoder:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAOfflineCity executeInitializationWithDictionary:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAOfflineCity descriptionDictionary]", 0)}, 0);
setTimeout(function(){hookObjC("-[MADiskCache cachedImage:withCacheKey:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MADiskCache addImage:forTile:withCacheKey:]", 3)}, 0);
setTimeout(function(){hookObjC("-[MADiskCache removeAllCachedImages]", 0)}, 0);
setTimeout(function(){hookObjC("-[MADiskCache removeAllCachedImagesForCacheKey:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MADiskCache didReceiveMemoryWarning]", 0)}, 0);
setTimeout(function(){hookObjC("+[MADiskCache GetJMergeGrid:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MADiskCache GetJMergeDirection:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MADiskCache createCachedDataPath:withIndexName:withDataName:]", 3)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer updateGlWindow]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer mapLenForPixelLen:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer pointForMapPoint:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer mapPointForPoint:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer rectForMapRect:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer mapRectForRect:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer glPointForMapPoint:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer glPointsForMapPoints:count:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer referenceDidChange]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer strokeTextureID]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer loadStrokeTextureImage:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer renderIconWithTextureID:points:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer glRender]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer glPoints]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer glPointCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayRenderer textureImage]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapViewInitTask mapPointAfterInit]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapViewInitTask otherValueAfterInit]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapViewInitTask pivotAfterInit]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapViewInitTask animatedAfterInit]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapViewInitTask durationAfterInit]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapViewInitTask functionTypeAfterInit]", 0)}, 0);
setTimeout(function(){hookObjC("-[MATileOverlayDownloader loadTileThread:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MATileOverlayDownloader tileOverlayRenderer]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAPolygon boundingMapRect]", 0)}, 0);
setTimeout(function(){hookObjC("+[MAPolygon polygonWithCoordinates:count:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MAPolygon polygonWithPoints:count:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MAPolyline boundingMapRect]", 0)}, 0);
setTimeout(function(){hookObjC("+[MAPolyline polylineWithCoordinates:count:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MAPolyline polylineWithPoints:count:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MACircle calculateBoundingMapRect]", 0)}, 0);
setTimeout(function(){hookObjC("-[MACircle rebuildOutline]", 0)}, 0);
setTimeout(function(){hookObjC("+[MACircle circleWithCenterCoordinate:radius:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MACircle circleWithMapRect:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MACircle boundingMapRect]", 0)}, 0);
setTimeout(function(){hookObjC("-[MACircle mapPoints]", 0)}, 0);
setTimeout(function(){hookObjC("-[MACircle pointsCount]", 0)}, 0);
setTimeout(function(){hookObjC("+[MATracePointsReducer reducer_verticalThreshold:threshHold:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MATracePointsReducer reducer_RDP:threshHold:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MATracePointsReducer calculateDistanceFromPoint:toLine:and:]", 3)}, 0);
setTimeout(function(){hookObjC("-[MATileOverlayRenderer glPointsForTileX:tileY:transform:]", 3)}, 0);
setTimeout(function(){hookObjC("-[MATileOverlayRenderer loadTextureID:WithKey:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MATileOverlayRenderer loadTileWithTilePath:Key:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MATileOverlayRenderer glRenderTile:Transform:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MATileOverlayRenderer glRenderTiles:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MATileOverlayRenderer glRender]", 0)}, 0);
setTimeout(function(){hookObjC("-[MATileOverlayRenderer createLoadTileThread]", 0)}, 0);
setTimeout(function(){hookObjC("-[MATileOverlayRenderer tileOverlayLoadDics]", 0)}, 0);
setTimeout(function(){hookObjC("-[MATileOverlayRenderer reloadData]", 0)}, 0);
setTimeout(function(){hookObjC("-[MATileOverlayRenderer tileOverlay]", 0)}, 0);
setTimeout(function(){hookObjC("-[MapStatus mapType]", 0)}, 0);
setTimeout(function(){hookObjC("-[MapStatus rotateDegree]", 0)}, 0);
setTimeout(function(){hookObjC("-[MapStatus cameraDegree]", 0)}, 0);
setTimeout(function(){hookObjC("-[MapStatus centerCoordinate]", 0)}, 0);
setTimeout(function(){hookObjC("-[MapStatus showsBuildings]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAHeatMapGradient startPoints]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAHeatMapTileOverlay loadTileAtPath:result:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MAHeatMapTileOverlay boundingMapRectForHeatMapData]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAHeatMapTileOverlay buildQuadTree]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAHeatMapTileOverlay heatMapnodesInMapRect:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAHeatMapTileOverlay mapRectWithTilePath:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAHeatMapTileOverlay pointInTileWithMapPoint:withInMapRect:atZoomLevel:]", 3)}, 0);
setTimeout(function(){hookObjC("-[MAHeatMapTileOverlay allowRetinaAdapting]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorRequestReformer baseURL]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAAnimatedAnnotation moveAnimations]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAAnimatedAnnotation allMoveAnimations]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAAnimatedAnnotation step:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAAnimatedAnnotation rotateDegree]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAAnimatedAnnotation movingDirection]", 0)}, 0);
setTimeout(function(){hookObjC("+[MAMapComponent sharedInstance]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapComponent userAgent]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapComponent crashfilterArray]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEnginePoi winPoint]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEnginePoi geoPoint]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEnginePoi poiID]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEnginePoi poiName]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEnginePoi poiType]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapTile tileName]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapTile tileIndex]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapTile tileVersion]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapTile tmc_MD5]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine updateMapEngineAsynTaskIsOpen:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine updateMapEngineParameterForMapType:andMapStyle:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine changeMapStatusWithMapStyleType:andMapType:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine doSetMapPointCenter:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine push_am_projection]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine pop_am_projection]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine resetProjectionIdentity]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine projectionContextStack]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine mapPointCenter]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine mapZoomLevel]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine mapAngle]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine mapHeaderAngle]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine doIndoorMapHideWithValue:andType:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine canStopRender]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine requestMapDataWithTiles:dataSource:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine processMapEvent]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine renderMap:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine referenceChanged:newGrid:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine indoorBuildingActivity:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine destroyMapEngine]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine createMapEngine]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine mapType]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine mapStyleType]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMapEngine mapRectVisibleBoundary]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAUserLocationRepresentation showsAccuracyRing]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAUserLocationRepresentation showsHeadingIndicator]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAUserLocationRepresentation enablePulseAnnimation]", 0)}, 0);
setTimeout(function(){hookObjC("-[MABaseAnimationTask mediaTimingFunction]", 0)}, 0);
setTimeout(function(){hookObjC("-[MADataCache addCache:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MADataCache insertCache:atIndex:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MADataCache tileCaches]", 0)}, 0);
setTimeout(function(){hookObjC("+[MADataCache tileHash:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MADataCache tileKey:cacheKey:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MADataCache cachedImage:withCacheKey:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MADataCache addImage:forTile:withCacheKey:]", 3)}, 0);
setTimeout(function(){hookObjC("-[MADataCache didReceiveMemoryWarning]", 0)}, 0);
setTimeout(function(){hookObjC("-[MADataCache removeAllCachedImages]", 0)}, 0);
setTimeout(function(){hookObjC("-[MADataCache removeAllCachedImagesForCacheKey:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MADataCache dataCaches]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorFloorInfo floorName]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorFloorInfo floorNona]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorFloorInfo floorIndex]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorInfo cnName]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorInfo enName]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorInfo floorInfo]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorInfo poiID]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorInfo buildingType]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorInfo activeFloorInfoIndex]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorInfo activeFloorIndex]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorInfo numberOfFloor]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAIndoorInfo numberOfParkFloor]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMultiColoredPolylineRenderer multiPolyline]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMultiColoredPolylineRenderer glRender]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAMultiColoredPolylineRenderer checkStrokeColors:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAMultiColoredPolylineRenderer strokeColors]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayPathRenderer lineJoinType]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayPathRenderer lineCapType]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayPathRenderer miterLimit]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAOverlayPathRenderer lineDash]", 0)}, 0);
setTimeout(function(){hookObjC("+[MACommonTool mapRectForMapPoints:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MACommonTool mapRectForOverlays:]", 1)}, 0);
setTimeout(function(){hookObjC("+[MACommonTool calculateVectorAngle:des:]", 2)}, 0);
setTimeout(function(){hookObjC("+[MACommonTool AMapDataAvailableForTile:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAMapLayer removeAllAnimations]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAProjection normalizeMapPoint:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAProjection normalizeCoordinate:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAProjection mapPointToCoordinate:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAProjection coordinateToMapPoint:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAProjection metersPerMapPointAtLatitude:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAProjection mapPointPerMertersAtLatitude:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAProjection areaForSphericalTrapezium:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MATraceQueryOperation loopCheckResponses]", 0)}, 0);
setTimeout(function(){hookObjC("-[MATraceQueryOperation asyncSingleQueryProcessedTraceWith:completeCallback:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MATraceQueryOperation beginDate]", 0)}, 0);
setTimeout(function(){hookObjC("-[MATraceQueryOperation subRequests]", 0)}, 0);
setTimeout(function(){hookObjC("-[MATraceQueryOperation pendingNetworkOpArr]", 0)}, 0);
setTimeout(function(){hookObjC("-[MATraceQueryOperation lastNetworkError]", 0)}, 0);
setTimeout(function(){hookObjC("-[MATraceQueryOperation nextProcessingCallbackIndex]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAGroundOverlay rebuildMapPoint]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAGroundOverlay calculateBoundingMapRect]", 0)}, 0);
setTimeout(function(){hookObjC("+[MAGroundOverlay groundOverlayWithCoordinate:zoomLevel:icon:]", 3)}, 0);
setTimeout(function(){hookObjC("+[MAGroundOverlay groundOverlayWithBounds:icon:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MAGroundOverlay zoomLevel]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAGroundOverlay mapPoints]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAGroundOverlay centerMapPoint]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAGroundOverlay pointsCount]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAGroundOverlay boundingMapRect]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTreeNode addAnnotationToChildNodes:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTreeNode addAnnotation:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTreeNode removeAnnotation:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTreeNode removeAllObjects]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTreeNode removeAnnotation:atOldPosition:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTreeNode containsAnnotation:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTreeNode addAnnotationsInBoundingBox:toMutableArray:]", 2)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTreeNode northWest]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTreeNode northEast]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTreeNode southWest]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTreeNode southEast]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTreeNode boundingBox]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTree boundingBox]", 0)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTree addAnnotation:]", 1)}, 0);
setTimeout(function(){hookObjC("-[MAQuadTree addAnnotations:]", 1)}, 0);
